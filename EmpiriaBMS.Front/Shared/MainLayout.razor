@inherits LayoutComponentBase

@using EmpiriaBMS.Core.Dtos
@using Microsoft.Extensions.Configuration
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Hosting
@using EmpiriaBMS.Front.Components.Admin
@using EmpiriaBMS.Front.Services
@using EmpiriaBMS.Front.Horizontal
@using System.Net.Http.Headers

@inject TeamsFx teamsfx
@inject TeamsUserCredential teamsUserCredential
@inject MicrosoftTeams MicrosoftTeams
@inject IWebHostEnvironment HostEnvironment
@inject IConfiguration Configuration
@inject NavigationManager NavigationManager
@inject IDataProvider DataProvider
@inject IMapper Mapper
@inject AuthorizeServices authorizeServices
@inject SharedAuthDataService _sharedAuthData
@inject HttpClient HttpClient

@if(isLoading)
{
    <div style="display: flex; justify-content: center; align-items: center; min-height: 100vh;">
        <FilterProgressRing FilterLoading="@isLoading"/>
    </div>
}
else
{
    <div class="container-fluid">
        <div class="row flex-nowrap">
            @* @if (SeeAdmin)
            {
                <!-- NavBar -->
                <div class="col-auto col-md-3 col-xl-2 px-0
                            bg-dark bg-gradient">
                    <div class="d-flex flex-column
                                align-items-start align-items-md-start align-items-sm-center align-items-xs-center
                                px-3 pt-2 text-white min-vh-100">
                        <a href="#" class="d-none d-md-inline d-flex
                                           align-items-center
                                           pb-3 mb-md-0 me-md-auto
                                           text-white text-decoration-none">
                            <span class="fs-5 d-none d-md-inline">Menu</span>
                        </a>
                        <ul class="nav nav-pills flex-column 
                                   mb-auto
                                   align-items-start
                                   align-items-md-start
                                   align-items-sm-center
                                   align-items-xs-center"
                            id="menu">
                            @if (SeeDashboard)
                            {
                                <li class="nav-item">
                                    <a class="nav-link d-flex justify-content-start"
                                       herf="/dashboard"
                                       @onclick="@(() => selectUrl("/dashboard"))">
                                        <span class="arcticons--nextcloud-tables"></span>
                                        <b class="ms-1 d-none d-md-inline nav-link-text">Dashboard</b>
                                    </a>
                                </li>
                            }
                            <li class="nav-item">
                                <a class="nav-link d-flex justify-content-start"
                                   @onclick="@(() => selectUrl("/mvc/Admin/Projects/Table"))">
                                    <span class="file-icons--microsoft-project"></span>
                                    <b class="ms-1 d-none d-md-inline nav-link-text">Projects</b>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link d-flex justify-content-start"
                                   @onclick="@(() => selectUrl("/mvc/Admin/Users/Table"))">
                                    <span class="ph--users-four-light"></span>
                                    <b class="ms-1 d-none d-md-inline nav-link-text">Users</b>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link d-flex justify-content-start"
                                   @onclick="@(() => selectUrl("/mvc/Admin/Roles/Table"))">
                                    <span class="oui--app-users-roles"></span>
                                    <b class="ms-1 d-none d-md-inline nav-link-text">Roles</b>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link d-flex justify-content-start"
                                   @onclick="@(() => selectUrl("/mvc/Admin/ProjectTypes/Table"))">
                                    <span class="arcticons--ptv"></span>
                                    <b class="ms-1 d-none d-md-inline nav-link-text">Project Types</b>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link d-flex justify-content-start"
                                   @onclick="@(() => selectUrl("/mvc/Admin/DisciplineTypes/Table"))">
                                    <span class="gala--layer"></span>
                                    <b class="ms-1 d-none d-md-inline nav-link-text">Disciplines Types</b>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link d-flex justify-content-start"
                                   @onclick="@(() => selectUrl("/mvc/Admin/DrawingTypes/Table"))">
                                    <span class="streamline--hand-held-tablet-drawing"></span>
                                    <b class="ms-1 d-none d-md-inline nav-link-text">Deliverable Types</b>
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link d-flex justify-content-start"
                                   @onclick="@(() => selectUrl("/mvc/Admin/OtherTypes/Table"))">
                                    <span class="material-symbols--other-admission-outline-sharp"></span>
                                    <b class="ms-1 d-none d-md-inline nav-link-text">Supportive Work Types</b>
                                </a>
                            </li>
                        </ul>
                        <hr>
                    </div>
                </div>
            }
            <div class="col py-3">
                @if (SeeAdmin && !_selectedUrl.Equals("/dashboard"))
                {
                    <iframe src="@_selectedUrl" style="width: 100%; height: 100%; border: none;"></iframe>
                }
                else
                {
                    @Body
                }
            </div> *@

            @Body

        </div>
    </div>

    <!-- Remove This -->
    <select class="form-select" @onchange="UsersSelectionChanged"
            style="position:fixed !important; bottom:0px !important; width: auto; right: 10px;">
        @foreach (var _user in _allUsers)
        {
            @if (@_user.Id.Equals(_sharedAuthData?.LogedUser?.Id))
            {
                <option value="@_user?.Id" selected>
                    @_user.LastName @_user.FirstName  -->  [
                    @foreach (var r in _user.Roles)
                    {
                        <span>&nbsp; &nbsp; @r.Name &nbsp; &nbsp;</span>
                    }
                    ]
                </option>
            }
            else
            {
                <option value="@_user?.Id">
                    @_user.LastName @_user.FirstName  -->  [
                    @foreach (var r in _user.Roles)
                    {
                        <span>&nbsp; &nbsp; @r.Name &nbsp; &nbsp;</span>
                    }
                    ]
                </option>
            }
        }
    </select>
}

@code {
    bool _runInTeams = false;
    bool isLoading = true;
    //private string _selectedUrl = "";

    #region Authorization Properties
    public bool SeeAdmin
    {
        get
        {
            return _sharedAuthData.PermissionOrds.Contains(7);
        }
    }
    public bool SeeDashboard
    {
        get
        {
            return _sharedAuthData.PermissionOrds.Contains(1);
        }
    }
    private string _userName => 
        _sharedAuthData.LogedUser.LastName + " " + _sharedAuthData.LogedUser.FirstName;
    #endregion

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            _runInTeams = await MicrosoftTeams.IsInTeams();
            await GetAllUsers(); // TODO: Remove This
            authorizeServices.CallBackOnAuthorize += _afterAuthCallBack;
            var result = await authorizeServices.Authorize(runInTeams: _runInTeams);
            if (!result)
                NavigationManager.NavigateTo("/login");
        }
    }

    private void _afterAuthCallBack()
    {
        isLoading = false;
        //selectUrl("/mvc/Admin/Projects/Table");
        StateHasChanged();
    }

    // private void selectUrl(string url)
    // {
    //     _selectedUrl = url;
    // }

    private string GetEnvironmentName()
    {
        return HostEnvironment.IsDevelopment() ? "local environment" : "Azure environment";
    }

    // TODO: Remove This
    private ICollection<UserDto> _allUsers = new List<UserDto>();

    private async Task UsersSelectionChanged(ChangeEventArgs e)
    {
        isLoading = true;
        var selectUserId = Convert.ToInt32(e.Value);
        await authorizeServices.Authorize(selectUserId, _runInTeams);
        isLoading = false;
        StateHasChanged();
    }

    private async Task GetAllUsers()
    {
        var users = await DataProvider.Users.GetAllWithRoles();
        _allUsers.Clear();
        users.ToList().ForEach(_allUsers.Add);
    }
}
