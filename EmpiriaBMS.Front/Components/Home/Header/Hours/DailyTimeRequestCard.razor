<!-- DailyTimeRequestsCorrection.razor -->
@using EmpiriaBMS.Front.Services
@using EmpiriaBMS.Models.Enum
@using EmpiriaBMS.Models.Models
@using Microsoft.AspNetCore.Components
@using EmpiriaBMS.Front.Components.Home.Header.Hours;

@inject IDataProvider _dataProvider
@inject IMapper Mapper
@inject SharedAuthDataService _sharedAuthData
@inject TimerService TimerService
@inject Logging.LoggerManager Logger

<style>
    .description-text {
        width: 100%;
        height: 50px;
        word-wrap: break-word;
        overflow-wrap: break-word;
    }
</style>

<div class="card">

    <div class="card-title m-2">
        <h5>@Request.Date.ToShortDateString()</h5>
        <div>
            <h5>
                @Request.User?.FullName
            </h5>
        </div>
    </div>

    <div class="card-body">

        @if (Request.Project != null)
        {
            <div class="row">
                <strong class="col-12 col-lg-5 me-2">Project: </strong>
                <p class="col card-text">@Request.Project?.Name</p>
            </div>
        }

        @if (Request.Discipline != null)
        {
            <div class="row">
                <strong class="col-12 col-lg-5 me-2">Discipline: </strong>
                <p class="col card-text">@Request.Discipline?.Type?.Name</p>
            </div>
        }

        @if (Request.Deliverable != null)
        {
            <div class="row">
                <strong class="col-12 col-lg-5 me-2">Deliverable: </strong>
                <p class="col card-text">@Request.Deliverable?.Type?.Name</p>
            </div>
        }

        @if (Request.SupportiveWork != null)
        {
            <div class="row">
                <strong class="col-12 col-lg-5 me-2">Supp/Work: </strong>
                <p class="col card-text">@Request.SupportiveWork?.Type?.Name</p>
            </div>
        }
        
        @if (!string.IsNullOrEmpty(Request.Description))
        {
            <div class="row">
                <strong class="col-12 col-lg-5 me-2">Description: </strong>
                <p class="col card-text description-text">@Request.Description</p>
            </div>
        }     

        <p class="card-text"><small class="text-muted">@FormatTimeSpan(Request)</small></p>
    
        <FluentStack Orientation="Orientation.Horizontal"
                     VerticalAlignment="VerticalAlignment.Center">
            <FluentButton IconStart="@(new Icons.Regular.Size16.Delete())"
                          OnClick="@_reject">
                Reject
            </FluentButton>
            <FluentButton IconStart="@(new Icons.Regular.Size16.ApprovalsApp())"
                          Appearance="Appearance.Accent"
                          OnClick="@_approve">
                Approve
            </FluentButton>
        </FluentStack>
    </div>

</div>