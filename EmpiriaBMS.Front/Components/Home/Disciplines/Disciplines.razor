@using EmpiriaBMS.Front.Components.Invoices
@using Microsoft.Fast.Components.FluentUI
@using EmpiriaBMS.Front.Components.General
@using EmpiriaBMS.Front.Components
@using EmpiriaBMS.Front.Components.Home.Offers
@using EmpiriaBMS.Front.Components.KPIS
@using EmpiriaBMS.Front.Horizontal
@using EmpiriaBMS.Front.Services
@using EmpiriaBMS.Front.Components.Admin
@using Color = Microsoft.Fast.Components.FluentUI.Color
@using EmpiriaBMS.Core.Services.DBManipulation
@using EmpiriaBMS.Front.Components.WorkingHours
@using EmpiriaBMS.Front.Components.Reports
@using EmpiriaBMS.Models.Enum
@using EmpiriaBMS.Front.Components.Home.Clients
@using EmpiriaBMS.Front.Components.Home.Deliverables
@using EmpiriaBMS.Front.Components.Home.Disciplines
@using EmpiriaBMS.Front.Components.Home.Issues
@using EmpiriaBMS.Front.Components.Home.Projects
@using EmpiriaBMS.Front.Components.Home.SupportiveWorks

@inject TeamsFx teamsfx
@inject TeamsUserCredential teamsUserCredential
@inject MicrosoftTeams MicrosoftTeams
@inject IWebHostEnvironment HostEnvironment
@inject IConfiguration Configuration
@inject NavigationManager MyNavigationManager
@inject IDataProvider _dataProvider
@inject IMapper Mapper
@inject TimerService TimerService
@inject AuthorizeServices authorizeServices
@inject SharedAuthDataService _sharedAuthData
@inject IDialogService DialogService
@inject DatabaseBackupService DatabaseBackupService
@inject Logging.LoggerManager Logger

@if (_projectId != 0)
{
    <!-- Actions -->
    <div style="height: 74px;">
        <div class="text-start row me-2">
            <h3 class="@((IsWorkingMode ? "col-8" : "col-11"))">Disciplines</h3>
        </div>
        <div class="text-center row me-2">
            <div class="col-6">
            </div>
            <div class="col-6">
                <FluentStack HorizontalAlignment="HorizontalAlignment.End">
                    @if (IsWorkingMode && editDiscipline)
                    {
                        @if (_selectedDiscipline != null)
                        {
                            <span class="fluent--delete-28-regular"
                                  @onclick="@(() => DeleteDiscipline())" />
                            <span class="material-symbols--edit-outline"
                                  @onclick="@(async () => await EditDiscipline())" />
                        }
                        @if (_hasDisciplinesSelections)
                        {
                            <span class="grommet-icons--add"
                                  @onclick="@(async () => await AddDiscipline())" />
                        }
                    }

                    <FluentButton IconStart="@(new Icons.Regular.Size16.ArrowExport())"
                                  Appearance="Appearance.Outline"
                                  OnClick="@(async (e) => await ExportDisciplinesToCSV())"
                                  Disabled="@(_data.Count() == 0)">
                        Export
                    </FluentButton>
                </FluentStack>
            </div>
        </div>
    </div>
    @if (_loading)
    {
        <div class="mt-5 mb-5">
            <FluentProgressRing Style="margin: 0 auto;" />
        </div>
    }
    else
    {
        <!-- Table -->
        <div class="table-responsive mt-2 p-1 table-container"
             style="overflow-x: auto !important;">
            <table class="table table-hover table-danger text-center">
                <thead>
                    <tr>
                        <th scope="col" class="sticky-header" style="word-wrap: break-word; max-width: 100px;">Discipline</th>
                        <th scope="col" class="sticky-header" style="word-wrap: break-word; max-width: 100px;">Estimated Discipline Hours</th>
                        @if (IsWorkingMode && assignEngineer)
                        {
                            <th scope="col"></th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var discipline in _data)
                    {
                        <tr class="align-middle
                                    @(( @GetMenHours(discipline.Id) > discipline.EstimatedHours ? "table-danger" : ""))"
                            @onclick="@(async () => await OnSelectDiscipline(discipline.Id))">

                            <td class="align-middle
                                            @(((_selectedDiscipline == null
                                                || !_selectedDiscipline.Id.Equals(discipline.Id))
                                                    ? "" : "selected_table_disciplines_row"))"
                                style="word-wrap: break-word; max-width: 100px;">
                                <labe>@discipline.Type.Name</labe>
                            </td>

                            <td class="align-middle text-center
                                        @(((_selectedDiscipline == null
                                            || !_selectedDiscipline.Id.Equals(discipline.Id))
                                                ? "" : "selected_table_disciplines_row"))"
                                style="word-wrap: break-word; max-width: 100px;">
                                <DisciplineEstimatedCompleted Id="discipline.Id"/>
                            </td>

                            @if (IsWorkingMode && assignEngineer)
                            {
                                <td class="align-middle
                                            @((_selectedDiscipline == null ||
                                                    !_selectedDiscipline.Id.Equals(discipline.Id)
                                                                    ? "" : "selected_table_disciplines_row"))">
                                    <span class="clarity--assign-user-line"
                                          @onclick="@(async (x) => await OnDesciplineAssignClick(discipline))">
                                    </span>
                                </td>
                            }

                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}

@if (!_loading)
{
    <!-- On "Add Engineers" Button Dialog -->
    <FluentDialog @ref="_addEngineerDialog"
                  Hidden="@(!_isAddEngineerDialogOdepened)"
                  Modal="false"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: 400px !important;
                         --dialog-height: auto !important;">

        <div class="badge text-dark text-wrap fs-3">
            Add Engineers
        </div>

        <div class="modal-body row">
            <div class="m-1 row justify-content-center">

                <div class="col-12 p-2">

                    <div class="mt-1 p-2 modal-content">
                        <div class="d-flex justify-content-around">
                            <div class="table-responsive p-1 w-100 h-100"
                                 style="max-height: 300px !important; overflow-y: auto;">
                                <table class="bg-transparent">
                                    <tbody>
                                        @foreach (var engineer in _engineers)
                                        {
                                            <tr clss="align-middle d-flex" @key="engineer.Id">
                                                <td class="align-middle">
                                                    <FluentCheckbox Class="big-checkbox mt-2"
                                                                    @bind-Value="@engineer.IsSelected" />
                                                </td>
                                                <td class="align-middle">
                                                    <div class="ms-3 mt-2">
                                                        @engineer.LastName &nbsp; @engineer.FirstName
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addEngineerDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => _addEngineerDialogCansel())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Add/Edit Discipline Dialog -->
    <FluentDialog @ref="_addEditDisciplineDialog"
                  Hidden="@(!_isAddEditDisciplineDialogOdepened)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                             --dialog-width: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="CloseAddDisciplineClick"></span>
            </div>

            <div class="col-12 justify-content-center">
                @if (_projectId != 0)
                {
                    <DisciplineDetailed @ref="@disciplineCompoment" ProjectId="@_projectId" />
                }
                else
                {
                    <h3 class="warning">No Project Selected!</h3>
                }
            </div>

        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addEditDisciplineDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => CloseAddDisciplineClick())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Delete Dialog -->
    <FluentDialog @ref="_deleteDialog"
                  Hidden="@(!_isDeleteDialogOdepened)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                             --dialog-width: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header row">
                <div class="col-10">
                    <h3>Delete Record</h3>
                </div>
                <span class="col-2 carbon--close-outline float-end" @onclick="OnDeleteClose"></span>
            </div>

            <div class="col-12 justify-content-center">
                <p>@_deleteDialogMsg</p>
            </div>

        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await OnDeleteAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => OnDeleteClose())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>
}