@using EmpiriaBMS.Front.Components.Admin.Leds
@using EmpiriaBMS.Front.Components.Admin.Projects
@using EmpiriaBMS.Front.Components.General
@using EmpiriaBMS.Front.Components.Admin.Invoices

@inherits Microsoft.AspNetCore.Components.ComponentBase;

@inject MicrosoftTeams MicrosoftTeams
@inject IDataProvider _dataProvider
@inject IMapper _mapper

<div class="row">

    <div class="col-12">
        <h3>@(_isNew ? "Add Offer" : "Edit Offer")</h3>
    </div>

    <div class="col-12 mt-2 mb-2 row">

        <div class="bs-stepper col-12">

            <!-- Tabs Buttons -->
            <div class="bs-stepper-header">
                <div class="step">
                    <button type="button"
                            class="btn step-trigger @(tabs[0] == true ? "selected_step" : "")"
                            onclick="@(async () => await TabMenuClick(0))"
                            disabled="@_isNew">
                        <span class="bs-stepper-circle">1</span>
                        <span class="bs-stepper-label">Create Led</span>
                    </button>
                </div>
                <div class="line"></div>
                <div class="step">
                    <button type="button"
                            class="btn step-trigger @(tabs[1] == true ? "selected_step" : "")"
                            onclick="@(async () => await TabMenuClick(1))"
                            disabled="@(_isNew || !_offerTabEnable)">
                        <span class="bs-stepper-circle">2</span>
                        <span class="bs-stepper-label">Create Offer</span>
                    </button>
                </div>
                <div class="line"></div>
                <div class="step">
                    <button type="button"
                            class="btn step-trigger @(tabs[2] == true ? "selected_step" : "")"
                            onclick="@(async () => await TabMenuClick(2))"
                            disabled="@(_isNew || !_projectsTabEnable)">
                        <span class="bs-stepper-circle">3</span>
                        <span class="bs-stepper-label">Create Project</span>
                    </button>
                </div>
            </div>

        </div>

        <!-- Display Body -->
        <div class="col-12" style="max-width: 1000px; margin: 0 auto;">    
            
            <!-- Led Detailed -->
            @if (tabs[0])
            {
                <div class="content" style="max-width: 900px; margin: 0 auto;">
                    <div class="row">
                        <div class="col-12 my-wizard-tab">
                            @if (Offer != null)
                            {
                                <!-- Led Detailed -->
                                <LedDetailed @ref="@_ledCompoment"
                                             Content="@Led"
                                             OnSave="@OnSave"
                                             DisplayActions="false"
                                             OnResultChanged="@_onLedResultChanged" />
                            }
                        </div>
                        <div class="col-12 mt-2">

                            <FluentStack Orientation="Orientation.Horizontal">

                                <FluentButton Class="float-end ms-2" OnClick="@(async () => await _saveLed())" Loading="@_loading">
                                    <FluentIcon Value="@(new MyIcons.Size32.Save())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                    Save
                                </FluentButton>

                                <FluentButton Class="float-end" OnClick="@(async () => await TabMenuClick(1))" Disabled="@(!_offerTabEnable)">
                                    <FluentIcon Value="@(new Icons.Regular.Size32.Next())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                    Next
                                </FluentButton>

                            </FluentStack>

                        </div>
                    </div>

                </div>
            }
            
            <!-- Offer Detailed -->
            @if (tabs[1])
            {
                <div class="content" style="max-width: 900px; margin: 0 auto;">
                    <div class="row">
                        <div class="col-12 my-wizard-tab">
                            @if (Offer != null)
                            {
                                <!-- Offers Detailed -->
                                <OfferDetailed @ref="@_offerCompoment"
                                               Content="@Offer"
                                               OnSave="@OnSave"
                                               DisplayTitle="false"
                                               DisplayActions="false"
                                               OnResultChanged="@_onOfferResultChanged" />
                            }
                        </div>
                        <div class="col-12 mt-2">
                            <FluentStack Orientation="Orientation.Horizontal">

                                <FluentButton Class="float-end" OnClick="@(async () => await TabMenuClick(0))">
                                    <FluentIcon Value="@(new Icons.Regular.Size32.Previous())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                    Previous
                                </FluentButton>

                                <FluentButton Class="float-end ms-2" OnClick="@(async () => await _saveOffer())" Loading="@_loading">
                                    <FluentIcon Value="@(new MyIcons.Size32.Save())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                    Save
                                </FluentButton>

                                <FluentButton Class="float-end ms-2" OnClick="@(async () => await TabMenuClick(2))" Disabled="@(!_projectsTabEnable)">
                                    <FluentIcon Value="@(new Icons.Regular.Size32.Next())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                    Next
                                </FluentButton>

                            </FluentStack>
                        </div>
                    </div>
                </div>
            }
            
            <!-- Projects -->
            @if (tabs[2])
            {
                <div class="content row" style="max-width: 900px; margin: 0 auto;">
                    <div class="col-12 my-wizard-tab">

                        <div class="row gx-1">

                            @if (_projects.Count > 0)
                            {
                                <div class="col-12 m-2">
                                    <!-- Projects -->
                                    <Projects Source="@_projects" SelectedRecord="@_project" OnSelect="@_onProjectSelect" />
                                </div>
                            }

                            <div class="col-12 m-2">
                                <div class="border rounded w-96" >
                                    <div class="w-92 m-2 sticky-on-top">
                                        <FluentButton Class="float-end" OnClick="@(async () => await _addProject())" Loading="@_loadingOnProject">
                                            <FluentIcon Value="@(new Icons.Regular.Size32.Add())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                            Add
                                        </FluentButton>
                                    </div>
                                    <div class="w-92">
                                        <!-- Project Detailed -->
                                         <ProjectDetailed @ref="@_projectCompoment" Content="@_project" DisplayActions="false" />
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                    <div class="col-12 mt-2">
                        <div class="d-flex justify-content-end">

                            <FluentButton Class="float-end" OnClick="@(async () => await TabMenuClick(1))">
                                <FluentIcon Value="@(new Icons.Regular.Size32.Previous())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                Previous
                            </FluentButton>

                            <FluentButton Class="float-end ms-2" OnClick="@(async () => await _saveProjects())" Loading="@_loading">
                                <FluentIcon Value="@(new MyIcons.Size32.Save())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                Save
                            </FluentButton>

                        </div>
                    </div>
                </div>
            }

        </div>

    </div>

</div>
