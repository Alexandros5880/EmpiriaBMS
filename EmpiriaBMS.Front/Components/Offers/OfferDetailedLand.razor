@using EmpiriaBMS.Front.Components.Admin.Projects.Contracts
@using EmpiriaBMS.Front.Components.Admin.Projects.Invoices
@using EmpiriaBMS.Front.Components.General

@inherits Microsoft.AspNetCore.Components.ComponentBase;

@inject MicrosoftTeams MicrosoftTeams
@inject IDataProvider _dataProvider
@inject IMapper _mapper

<div class="row">

    <div class="col-12">
        <h3>@(_isNew ? "Add Offer" : "Edit Offer")</h3>
    </div>

    <div class="col-12 mt-2 mb-2 row">

        <div class="bs-stepper col-12">

            <div class="bs-stepper-header">
                <div class="step">
                    <button type="button"
                            class="btn step-trigger @(tabs[0] == true ? "selected_step" : "")"
                            onclick="@(async () => await TabMenuClick(0))"
                            disabled="@_isNew">
                        <span class="bs-stepper-circle">1</span>
                        <span class="bs-stepper-label">Main Info</span>
                    </button>
                </div>
                <div class="line"></div>
                <div class="step">
                    <button type="button"
                            class="btn step-trigger @(tabs[1] == true ? "selected_step" : "")"
                            onclick="@(async () => await TabMenuClick(1))"
                            disabled="@_isNew">
                        <span class="bs-stepper-circle">2</span>
                        <span class="bs-stepper-label">Create Project</span>
                    </button>
                </div>
                <div class="line"></div>
                <div class="step">
                    <button type="button"
                            class="btn step-trigger @(tabs[2] == true ? "selected_step" : "")"
                            onclick="@(async () => await TabMenuClick(2))"
                            disabled="@_isNew">
                        <span class="bs-stepper-circle">3</span>
                        <span class="bs-stepper-label">Create Invoice</span>
                    </button>
                </div>
                <div class="line"></div>
                <div class="step">
                    <button type="button"
                            class="btn step-trigger @(tabs[3] == true ? "selected_step" : "")"
                            onclick="@(async () => await TabMenuClick(3))"
                            disabled="@_isNew">
                        <span class="bs-stepper-circle">4</span>
                        <span class="bs-stepper-label">Ready!</span>
                    </button>
                </div>
            </div>

        </div>

        <div class="col-12">

            <!-- Display Body -->
            @if (tabs[0]) // Offer Detailed
            {
                <div class="content" style="max-width: 900px; margin: 0 auto;">
                    <div class="row">
                        <div class="col-12 my-wizard-tab">
                            @if (Offer != null)
                            {
                                <!-- Offers Detailed -->
                                <OfferDetailed @ref="@_offerCompoment"
                                                States="@States"
                                                Types="@Types"
                                                Results="@Results"
                                                Offer="@Offer"
                                                OnSave="@OnSave"
                                                DisplayTitle="false"
                                                DisplayActions="false"/>
                            }
                        </div>
                        <div class="col-12 mt-2">

                            <FluentButton Class="float-end" OnClick="@(async () => await TabMenuClick(1))">
                                <FluentIcon Value="@(new Icons.Regular.Size32.Next())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                Next
                            </FluentButton>

                        </div>
                    </div>

                </div>
            }
            else if (tabs[1]) // Project Detailed
            {
                <div class="content" style="max-width: 900px; margin: 0 auto;">
                    <div class="row">
                        <div class="col-12 my-wizard-tab">

                            <!-- Project Detailed -->
                            <ProjectDetailed @ref="@_projectCompoment" Content="@_project" DisplayActions="false" />

                        </div>
                        <div class="col-12 mt-2">
                            <div class="d-flex justify-content-end">

                                <FluentButton Class="float-end" OnClick="@(async () => await TabMenuClick(0))">
                                    <FluentIcon Value="@(new Icons.Regular.Size32.Previous())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                    Previous
                                </FluentButton>

                                <FluentButton Class="float-end ms-2" OnClick="@(async () => await TabMenuClick(2))" Loading="@_loading">
                                    <FluentIcon Value="@(new Icons.Regular.Size32.Next())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                    Next
                                </FluentButton>

                            </div>
                        </div>
                    </div>
                </div>
            }
            else if (tabs[2]) // Invoice Detailed
            {
                @if (_invoices.Count == 0)
                {
                    <span class="text-warning">At least one invoice is required!</span>
                }
                <div class="content">
                    <div class="row">
                        <div class="col-12 my-wizard-tab">

                            <div class="row gx-1">

                                @if (_invoices.Count > 0)
                                {
                                    <div class="col-12 m-2">
                                        <!-- Invoices -->
                                        <InvoicesTable Source="@_invoices" SelectedRecord="@_invoice" DisplayAddButton="false" OnSelect="@_onInvoiceSelect" Project="@_project" />
                                    </div>
                                }

                                <div class="col-12 m-2">
                                    <div class="card shadow" style="margin: 0 auto;">
                                        <div class="w-92 m-2">
                                            <FluentButton Class="float-end" OnClick="@(async () => await _addInvoice())" Loading="@_loadingOnInvoice">
                                                <FluentIcon Value="@(new Icons.Regular.Size32.Add())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                                Add
                                            </FluentButton>
                                        </div>
                                        <div class="w-92">
                                            <!-- Invoice Detailed -->
                                            <InvoiceDetailed @ref="@_invoiceCompoment" Title="Add Invoice" DisplayAcions="false" DisplayProject="false" Content="@_invoice" />
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="col-12 mt-2">
                            <div class="d-flex justify-content-end">

                                <FluentButton Class="float-end" OnClick="@(async () => await TabMenuClick(1))">
                                    <FluentIcon Value="@(new Icons.Regular.Size32.Previous())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                    Previous
                                </FluentButton>

                                <FluentButton Class="float-end ms-2" OnClick="@(async () => await TabMenuClick(3))" Loading="@_loading" Disabled="@(!_contractTabEnable)">
                                    <FluentIcon Value="@(new Icons.Regular.Size32.Next())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                    Next
                                </FluentButton>

                            </div>
                        </div>
                    </div>
                </div>
            }
            else if (tabs[3]) // Ready!
            {
                <div class="content" style="max-width: 900px; margin: 0 auto;">
                    <div class="row">
                        <div class="col-12 my-wizard-tab">
                            <div class="row">
                                <div class="col-12 m-2">
                                    <h3 class="text-bg-primary text-center ">Offer Created Successfully</h3>
                                </div>
                            </div>
                        </div>
                        <div class="col-12 mt-2">
                            <div class="d-flex justify-content-end">

                                <FluentButton Class="float-end" OnClick="@(async () => await _close())" Loading="@_loading">
                                    <FluentIcon Value="@(new Icons.Regular.Size32.ClosedCaption())" Color="Microsoft.Fast.Components.FluentUI.Color.Accent" Slot="start" />
                                    End
                                </FluentButton>

                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>

    </div>

</div>
