@using EmpiriaBMS.Front.ViewModel.Interfaces
@using EmpiriaBMS.Front.Services
@using Color = Microsoft.Fast.Components.FluentUI.Color
@using EmpiriaBMS.Front.Components.Admin.Projects.Clients

@implements IDialogContentComponent<ProjectVM>
   
@inject IDataProvider DataProvider
@inject IMapper Mapper
@inject IDialogService DialogService

@* Header *@
<FluentDialogHeader ShowDismiss="true">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentIcon Value="@(new Icons.Regular.Size24.WindowApps())" />
        <FluentLabel Typo="Typography.PaneHeader">
            @Dialog.Instance.Parameters.Title
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Accent" OnClick="@SaveAsync">Save</FluentButton>
    <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">Cancel</FluentButton>
</FluentDialogFooter>

@* Body *@
<FluentDialogBody>
    <div class="row gx-2"
         style="height: 77vh; max-width: 100%; overflow-y: auto; overflow-x: hidden;">

        <div class="col-12 row gx-2">
            <!-- Name -->
            <div class="col-lg-6 col-md-12">
                <div class="col-12">
                    <FluentTextField Style="width: 100%;" @bind-Value="@Content.Name">
                        Name<span class="text-danger">*</span>
                    </FluentTextField>
                </div>
                @if (!validName)
                {
                    @if (string.IsNullOrEmpty(@Content?.Name))
                    {
                        <div class="col-12">
                            <span class="text-warning">Field is required!</span>
                        </div>
                    }
                }
            </div>
            <!-- Code-->
            <div class="col-lg-6 col-md-12">
                <div class="col-12">
                    <FluentTextField Style="width: 100%;" @bind-Value="@Content.Code">
                        Code<span class="text-danger">*</span>
                    </FluentTextField>
                </div>
                @if (!validCode)
                {
                    @if (string.IsNullOrEmpty(@Content?.Code))
                    {
                        <div class="col-12">
                            <span class="text-warning">Field is required!</span>
                        </div>
                    }
                }
            </div>
        </div>

        <div class="col-12 row gx-2">
            <!-- Category -->
            <div class="col-lg-6 col-md-12">
                <div class="col-12">
                    Category<span class="text-danger">*</span>
                </div>
                <div class="col-12">
                    <FluentCombobox Placeholder="Select Category..."
                                    Items="@_categories"
                                    Height="200px"
                                    Width="100%"
                                    TOption="ProjectCategoryVM"
                                    OptionText="@(c => c.Name)"
                                    OptionValue="@(c => c.Id.ToString())"
                                    @bind-SelectedOption="@Category" />
                </div>
                @if (!validCategory)
                {
                    <div class="col-12">
                        <span class="text-warning">Field is required!</span>
                    </div>
                }
            </div>
            <!-- SubCategory-->
            <div class="col-lg-6 col-md-12">
                <div class="col-12">
                    SubCategory<span class="text-danger">*</span>
                </div>
                <div class="col-12">
                    <FluentCombobox @ref="@_subCatCombo"
                                    Placeholder="Select SubCategory..."
                                    Items="@_subCategories"
                                    Height="200px"
                                    Width="100%"
                                    TOption="ProjectSubCategoryVM"
                                    OptionText="@(c => c.Name)"
                                    OptionValue="@(c => c.Id.ToString())"
                                    @bind-SelectedOption="@SubCategory" />
                </div>
                @if (!validSubCategory)
                {
                    <div class="col-12">
                        <span class="text-warning">Field is required!</span>
                    </div>
                }
            </div>
        </div>

        <div class="col-12 row gx-2">
            <!-- StartDate -->
            <div class="col-lg-6 col-md-12">
                <FluentDatePicker Style="width: 100%;" @bind-Value="@Content.StartDate" Label="Start Date" />
            </div>
            <!-- DeadLine-->
            <div class="col-lg-6 col-md-12">
                <FluentDatePicker Style="width: 100%;" @bind-Value="@Content.DeadLine" Label="DeadLine" />
            </div>
        </div>

        <div class="col-12 row gx-2">
            <!-- Stage -->
            <div class="col-lg-6 col-md-12">
                <div class="col-12">
                    Stage<span class="text-danger">*</span>
                </div>
                <div class="col-12">
                    <FluentCombobox Placeholder="Select Stage..."
                                    Items="@_stages"
                                    Height="200px"
                                    Width="100%"
                                    TOption="ProjectStageVM"
                                    OptionText="@(c => c.Name)"
                                    OptionValue="@(c => c.Id.ToString())"
                                    @bind-SelectedOption="@Stage" />
                </div>
                @if (!validStage)
                {
                    <div class="col-12">
                        <span class="text-warning">Field is required!</span>
                    </div>
                }
            </div>
            <!-- EstimatedHours -->
            <div class="col-lg-6 col-md-12">
                <FluentNumberField Style="width: 100%;" @bind-Value="@Content.EstimatedHours" Min="0">
                    EstimatedHours<span class="text-danger">*</span>
                </FluentNumberField>
            </div>
        </div>

        <div class="col-12 row gx-2">
            <!-- Project Manager -->
            <div class="col-lg-6 col-md-12">
                <div class="col-12">
                    Project Manager<span class="text-danger">*</span>
                </div>
                <div class="col-12">
                    <FluentCombobox Autocomplete="ComboboxAutocomplete.Both"
                                    Placeholder="Select PM..."
                                    Items="@_pms"
                                    Height="200px"
                                    Width="100%"
                                    TOption="UserVM"
                                    OptionText="@(c => c.FullName)"
                                    OptionValue="@(c => c.Id.ToString())"
                                    @bind-SelectedOption="@Pm"/>
                </div>
                @if (!validPm)
                {
                    <div class="col-12">
                        <span class="text-warning">Field is required!</span>
                    </div>
                }
            </div>
            <!-- Client -->
            <div class="col-lg-6 col-md-12">
                <div class="col-12">
                    Client
                </div>
                <div class="col-12 row">
                    <div class="col-11">
                        <FluentCombobox Autocomplete="ComboboxAutocomplete.Both"
                                        Placeholder="Select Client..."
                                        Items="_clients"
                                        Height="200px"
                                        Width="100%"
                                        TOption="ClientVM"
                                        OptionText="@(c => c.FullName)"
                                        OptionValue="@(c => c.Id.ToString())"
                                        @bind-SelectedOption="@Client" />
                    </div>
                    <div class="col-1">
                        <FluentIcon Value="@(new Icons.Regular.Size32.Add())"
                                    Color="Color.Accent"
                                    Slot="start"
                                    OnClick="@_addClient" />
                    </div>
                </div>
            </div>
        </div>

        <!-- Client Form (For Add) -->
        @if(_diplayedClientForm)
        {
            <div class="col-12 border rounded mb-3 mt-3 p-2" style="margin: 0 auto;">
                <ClientDetailed Content="@Client"
                                OnCancel="@(() => _closeClientForm())"
                                OnSave="@((client) => _closeClientForm(client))" />
            </div>
        }

        <!-- Description -->
        <div class="col-12">
            <FluentTextArea Style="width:100%;" @bind-Value="@Content.Description" Rows="3" Resize="TextAreaResize.Vertical">Description:</FluentTextArea>
        </div>

        <!-- Address (Map) -->
        <div class="col-12">
            <div class="row mt-3 mb-3">
                <div class="col-12">
                    <Map @ref="@_map"
                         Id="adminProjectMap"
                         AutoCompeteId="autocompeteAdminProjectMap"
                         OnFindAddress="@(() => _onSearchAddressChange())" />
                </div>
            </div>
        </div>

    </div>
</FluentDialogBody>