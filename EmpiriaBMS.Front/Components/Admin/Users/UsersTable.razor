@using EmpiriaBMS.Front.Services

<div class="table-responsive p-1 table-container">
    <table class="table table-hover text-center">
        <thead>
            <tr>
                <th scope="col" class="sticky-header"><h5>User</h5></th>
                <th scope="col" class="sticky-header"><h5>Email</h5></th>
                <th scope="col" class="sticky-header"><h5>Edit</h5></th>
                <th scope="col" class="sticky-header"><h5>Delete</h5></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Users)
            {
                <tr class="align-middle"
                    @onclick="@(async () => await OnRowSelected.InvokeAsync(user.Id))">

                    <td class="align-middle
                                    @((SelectedUser == null ||
                                            !SelectedUser.Id.Equals(user.Id)
                                                            ? "" : "highlight_1"))"
                        style="word-wrap: break-word;">
                        <labe>@user.LastName @user.FirstName</labe>
                    </td>

                    <td class="align-middle
                                    @((SelectedUser == null ||
                                            !SelectedUser.Id.Equals(user.Id)
                                                            ? "" : "highlight_1"))">
                        <label>@user.Email</label>
                    </td>

                    <td class="align-middle
                                    @((SelectedUser == null ||
                                            !SelectedUser.Id.Equals(user.Id)
                                                            ? "" : "highlight_1"))">
                        <span class="material-symbols--edit-outline" />
                    </td>

                    <td class="align-middle
                                    @((SelectedUser == null ||
                                            !SelectedUser.Id.Equals(user.Id)
                                                            ? "" : "highlight_1"))">
                        <span class="fluent--delete-28-regular" />
                    </td>

                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    [Parameter]
    public EventCallback<int> OnRowSelected { get; set; }

    [Parameter]
    public ObservableCollection<UserVM> Users { get; set; }

    [Parameter]
    public UserVM SelectedUser { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {

        }
    }
}
