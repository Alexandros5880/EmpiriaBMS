@using EmpiriaBMS.Front.ViewModel.Interfaces
@using EmpiriaBMS.Models.Models

@implements IDialogContentComponent<UserVM>

@using EmpiriaBMS.Front.Services
@inject IDataProvider _dataProvider
@inject IMapper _mapper
@inject IDialogService _dialogService

@* Header *@
<FluentDialogHeader ShowDismiss="true">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentIcon Value="@(new Icons.Regular.Size24.WindowApps())" />
        <FluentLabel Typo="Typography.PaneHeader">
            @Dialog.Instance.Parameters.Title
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>

@* Footer *@
<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Accent" OnClick="@SaveAsync">Save</FluentButton>
    <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">Cancel</FluentButton>
</FluentDialogFooter>

@* Body *@
<FluentDialogBody>

    <!-- Names -->
    <div class="row">
        <div class="col-xl-4 col-lg-4">
            <div class="col-12">
                <FluentTextField Style="width:100%; margin:4px;" 
                                 @bind-Value="@Content.FirstName">FirstName<span class="text-danger">*</span></FluentTextField>
            </div>
            @if (!validFirstName)
            {
                @if (string.IsNullOrEmpty(@Content.FirstName))
                {
                    <div class="col-12">
                        <span class="text-warning">Field is required!</span>
                    </div>
                }
            }
        </div>
        <div class="col-xl-4 col-lg-4">
            <FluentTextField Style="width:100%; margin:4px;" @bind-Value="@Content.MidName">MidName</FluentTextField>
        </div>
        <div class="col-xl-4 col-lg-4">
            <div class="col-12">
                <FluentTextField Style="width:100%; margin:4px;"
                                 @bind-Value="@Content.LastName">
                    LastName<span class="text-danger">*</span>
                </FluentTextField>
            </div>
            @if (!validLastName)
            {
                @if (string.IsNullOrEmpty(@Content.LastName))
                {
                    <div class="col-12">
                        <span class="text-warning">Field is required!</span>
                    </div>
                }
            }
        </div>
    </div>

    <!-- Phones-->
    <div class="row">
        <div class="col-xl-4 col-lg-4">
            <div class="col-12">
                <FluentTextField Style="width:100%; margin:4px;"
                                 @bind-Value="@Content.Phone1">
                    Phone1<span class="text-danger">*</span>
                </FluentTextField>
            </div>
            @if (!validPhone1)
            {
                @if (string.IsNullOrEmpty(@Content.Phone1))
                {
                    <div class="col-12">
                        <span class="text-warning">Field is required!</span>
                    </div>
                }
                else if (!_isValidPhoneNumber(@Content.Phone1))
                {
                    <div class="col-12">
                        <span class="text-warning">Invalid Phone!</span>
                    </div>
                }
            }
        </div>
        <div class="col-xl-4 col-lg-4">
            <div class="col-12">
                <FluentTextField Style="width:100%; margin:4px;"
                                 @bind-Value="@Content.Phone2">
                    Phone2
                </FluentTextField>
            </div>
            @if (!validPhone2)
            {
                @if (!_isValidPhoneNumber(@Content.Phone2) && !string.IsNullOrEmpty(@Content.Phone2))
                {
                    <div class="col-12">
                        <span class="text-warning">Invalid Phone!</span>
                    </div>
                }
            }
        </div>
        <div class="col-xl-4 col-lg-4">
            <div class="col-12">
                <FluentTextField Style="width:100%; margin:4px;"
                                 @bind-Value="@Content.Phone3">
                    Phone3
                </FluentTextField>
            </div>
            @if (!validPhone3)
            {
                @if (!_isValidPhoneNumber(@Content.Phone3) && !string.IsNullOrEmpty(@Content.Phone3))
                {
                    <div class="col-12">
                        <span class="text-warning">Invalid Phone!</span>
                    </div>
                }
            }
        </div>
    </div>
    
    <!-- Proxy Address -->
    <div class="row">
        <div class="col-12">
            <FluentTextField Style="width:100%; margin:4px;"
                             Value="@Content.ProxyAddress"
                             @oninput="@((e) => _onProxyAddressChange(e))">
                ProxyAddress<span class="text-danger">*</span>
            </FluentTextField>
        </div>
        @if (!validProxyAddress)
        {
            @if (string.IsNullOrEmpty(@Content.ProxyAddress))
            {
                <div class="col-12">
                    <span class="text-warning">Field is required!</span>
                </div>
            }
            else if (!_isValidEmail(@Content.ProxyAddress))
            {
                <div class="col-12">
                    <span class="text-warning">No valid proxy address!</span>
                </div>
            }
        }
    </div>

    <!-- Description -->
    <div class="row">
        <div class="col-12">
            <FluentTextArea Style="width:100%; margin:4px;" @bind-Value="@Content.Description" Rows="3" Resize="TextAreaResize.Vertical">Description:</FluentTextArea>
        </div>
    </div>

    <!-- Emails -->
    <div class="col-12" Style="margin-top: 4px;">
        <div class="row">
            <div class="col-12">
                <h4>Emails</h4>
                @if (!validEmails)
                {
                    <span class="text-warning">At least one email required!</span>
                }
            </div>
            <div class="col-12 row">
                <div class="col-6">
                    <FluentStack Class="mt-2" HorizontalAlignment="HorizontalAlignment.Start" Style="margin-left: 10px;">
                        <FluentSearch type="search"
                                      Autofocus=true
                                      @bind-Value="@_filterString"
                                      Placeholder="Search..."
                                      @oninput="@HandleFilter" />
                    </FluentStack>
                </div>
                <div class="col-6">
                    <FluentStack Class="mt-2" HorizontalAlignment="HorizontalAlignment.End" Style="margin-right: 10px;">
                        <FluentButton aria-label="Add" IconEnd="@(new Icons.Regular.Size16.Add())" OnClick="@(() => _addEmail())">Add</FluentButton>
                    </FluentStack>
                </div>
            </div>
        </div>
        <div>
            <FluentDataGrid @ref="@myGrid"
                            Items="@FilteredEmails"
                            ResizableColumns=true
                            Pagination="@pagination"
                            TGridItem="Email"
                            GridTemplateColumns="auto 100px">

                <TemplateColumn Title="Address" Sortable="true" Style="text-wrap: wrap;">
                    <div class="row">
                        <div class="col-12">
                            <FluentTextField Value="@context.Address"
                                             TextFieldType="TextFieldType.Email"
                                             @oninput="@((e) => _onEmailAddressChange(context.Address, e))" />
                        </div>
                        <div class="col-12">
                            @if (!_isValidEmail(@context.Address))
                            {
                                <span class="text-warning">No valid email!</span>
                            }
                        </div>
                    </div>
                </TemplateColumn>

                <TemplateColumn Title="Actions" Align="@Align.End">
                    <FluentButton aria-label="Delete" IconEnd="@(new Icons.Regular.Size16.Delete())" OnClick="@(() => _deleteEmail(context))" />
                </TemplateColumn>

            </FluentDataGrid>
        </div>
        <div style="min-width: 50%;">
            <FluentPaginator State="@pagination">
                <SummaryTemplate>
                    There are <strong>@(pagination.TotalItemCount ?? 0)</strong> rows
                </SummaryTemplate>
                <PaginationTextTemplate>
                    This is page <strong>@(pagination.CurrentPageIndex + 1)</strong> out of a total of <strong>@(pagination.LastPageIndex + 1)</strong> pages
                </PaginationTextTemplate>
            </FluentPaginator>
        </div>
    </div>

</FluentDialogBody>
