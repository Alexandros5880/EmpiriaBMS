@page "/reports"
@using System.Threading.Tasks
@using ChartJs.Blazor;
@using EmpiriaBMS.Core.ReturnModels;
@using Color = Microsoft.Fast.Components.FluentUI.Color;
@using EmpiriaBMS.Front.Services
@using EmpiriaBMS.Front.Components.Home.Header.Hours;

@inject IDataProvider _dataProvider
@inject IMapper _mapper
@inject Logging.LoggerManager _logger
@inject MicrosoftTeams MicrosoftTeams
@inject SharedAuthDataService _sharedAuthData

@if (_loading)
{
    <!-- Loading -->
    <div class="loading_speen">
        <FluentProgressRing @bind-Visible="@_loading" />
    </div>
}

@if (_barChartConfig != null)
{
    <div class="row mb-1"
         style="visibility:@((_loading ? "hidden" : "visible"));">

        <!-- Filters -->
        <div class="col-6">
            <FluentStack Wrap="true"
                         HorizontalAlignment="HorizontalAlignment.Start"
                         VerticalAlignment="VerticalAlignment.Top"
                         HorizontalGap="4"
                         VerticalGap="4">

                <!-- Date Range -->
                <DateRangePicker class="form-control"
                                 title="Dates"
                                 placeholder="Select dates..."
                                 @bind-StartDate="StartDate"
                                 @bind-EndDate="EndDate"
                                 OnRangeSelect="@(async (e) => await OnDateSelect(e))"
                                 style="width: 220px;"
                                 DateFormat="dd/MM/yyyy"/>

                <!-- Client -->
                <FluentCombobox Autocomplete="ComboboxAutocomplete.Both"
                                Placeholder="Select Client..."
                                Items="@_clients"
                                Height="200px"
                                TOption="ClientVM"
                                OptionText="@(c => c.CompanyName)"
                                OptionValue="@(c => c.Id.ToString())"
                                SelectedOptionChanged="@(async (e) => await _onClientSelected(e))" />

                <!-- ProjectCategory -->
                <FluentCombobox Autocomplete="ComboboxAutocomplete.Both"
                                Placeholder="Select Project Category..."
                                Items="@_projectCategories"
                                Height="200px"
                                TOption="ProjectCategoryVM"
                                OptionText="@(c => c.Name)"
                                OptionValue="@(c => c.Id.ToString())"
                                SelectedOptionChanged="@(async (e) => await _onCategorySelected(e))" />

                <!-- ProjectSubCategory -->
                <FluentCombobox @ref="subCategoryCombo"
                                Autocomplete="ComboboxAutocomplete.Both"
                                Placeholder="Select Project SubCategory..."
                                Items="@_projectSubCategories"
                                Height="200px"
                                TOption="ProjectSubCategoryVM"
                                OptionText="@(c => c.Name)"
                                OptionValue="@(c => c.Id.ToString())"
                                SelectedOptionChanged="@(async (e) => await _onSubCategorySelected(e))" />

            </FluentStack>
        </div>

        <!-- Change Hours / Export to PDF -->
        <div class="col-6">
            <FluentStack Wrap="true"
                         HorizontalAlignment="HorizontalAlignment.End"
                         VerticalAlignment="VerticalAlignment.Top"
                         HorizontalGap="4"
                         VerticalGap="4">

                <!-- Change Hours -->
                @if (canChangeEverybodyHours)
                {
                    <FluentButton Appearance="Appearance.Outline"
                                  OnClick="@_openChangeHoursDialog">
                        <FluentIcon Value="@(new Icons.Regular.Size24.Clock())"
                                    Color="Color.Accent"
                                    Slot="start" />
                        Change Hours
                    </FluentButton>
                }

                <FluentButton Appearance="Appearance.Outline"
                              Loading="@exporting"
                              OnClick="@(async () => await _exportToPdf())">
                    Export
                    <FluentIcon Value="@(new Icons.Regular.Size32.DocumentPdf())"
                                Color="Color.Error"
                                Slot="start" />
                </FluentButton>
            </FluentStack>
        </div>

        <!-- Chart -->
        <div class="col-12 container mt-1"
             id="export-to-pdf-projects-report-chart">
            <Chart @ref="@_chartInstance" Config="@_barChartConfig" />
        </div>

        <!-- Table -->
        <div class="col-12 mt-2"
             id="export-to-pdf-projects-report-table">
            <div>
                <FluentDataGrid Items="@FilteredItems"
                                ResizableColumns=true
                                Pagination="@pagination"
                                TGridItem="ReportProjectReturnModel"
                                OnRowFocus="HandleRowFocus"
                                GridTemplateColumns="2fr 2fr 2fr 2fr 2fr 2fr 2fr"
                                style="height: 240px; overflow:auto;">

                    <TemplateColumn Title="Name"
                                    Sortable="true"
                                    InitialSortDirection=SortDirection.Descending
                                    IsDefaultSortColumn=true>
                        <ColumnOptions>
                            <div class="search-box">
                                <FluentSearch type="search"
                                              Autofocus=true
                                              @bind-Value="@_filterString"
                                              Placeholder="Name..."
                                              @oninput="@HandleFilter" />
                            </div>
                        </ColumnOptions>
                        <ChildContent>
                            @(context.Project.Name)
                        </ChildContent>
                    </TemplateColumn>

                    <PropertyColumn Property="@(p => p.Client.CompanyName)" Sortable="true" Title="Client" Align="@Align.Start" />

                    <PropertyColumn Property="@(p => p.Offer.Code)" Sortable="true" Title="Offer" Align="@Align.Start" />

                    <PropertyColumn Property="@(p => p.Category.Name)" Sortable="true" Title="Category" Align="@Align.Start" />

                    <PropertyColumn Property="@(p => p.SubCategory.Name)" Sortable="true" Title="Category" Align="@Align.Start" />

                    <PropertyColumn Property="@(p => p.Project.CreatedDate.ToEuropeFormat() ?? "--")" Sortable="true" Title="Created Date" Align="@Align.Start" />

                    <PropertyColumn Property="@(p => p.TotalWorkedTime.DisplayDHMS())" Sortable="true" Title="Worked Time" Align="@Align.Start" />

                </FluentDataGrid>
            </div>
            <div style="min-width: 50%;">
                <FluentPaginator State="@pagination">
                    <SummaryTemplate>
                        There are <strong>@(pagination.TotalItemCount ?? 0)</strong> rows
                    </SummaryTemplate>
                    <PaginationTextTemplate>
                        This is page <strong>@(pagination.CurrentPageIndex + 1)</strong> out of a total of <strong>@(pagination.LastPageIndex + 1)</strong> pages
                    </PaginationTextTemplate>
                </FluentPaginator>
            </div>
        </div>

    </div>

}
else
{
    <span class="text-warning ms-5"
          style="visibility:@((_loading ? "hidden" : "visible"));">
        No Data!
    </span>
}



<!-- On "Press Work End" Button Dialog -->
<FluentDialog @ref="_changeHoursDialog"
              Hidden="@(!_isChangeHoursDialogOdepened)"
              Modal="false"
              DialogType=@DialogType.Panel
              style="--dialog-width: auto !important;
              --dialog-height: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
            <span class="carbon--close-outline float-end" @onclick="_closeChangeHoursDialog"></span>
            </div>

            <div class="col-12 justify-content-center">
                <EditUsersHours DisplayTitle="true" OnEnd="_closeChangeHoursDialog" />
            </div>

        </div>

</FluentDialog>