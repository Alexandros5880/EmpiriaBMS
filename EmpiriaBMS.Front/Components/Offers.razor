@using Microsoft.Fast.Components.FluentUI
@using EmpiriaBMS.Front.Components.General
@using EmpiriaBMS.Front.Components
@using EmpiriaBMS.Front.Horizontal
@using EmpiriaBMS.Front.Services

@inject IDialogService DialogService
@inject TeamsUserCredential teamsUserCredential
@inject MicrosoftTeams MicrosoftTeams
@inject IWebHostEnvironment HostEnvironment
@inject IConfiguration Configuration
@inject NavigationManager MyNavigationManager
@inject IDataProvider _dataProvider
@inject IMapper Mapper
@inject TimerService TimerService
@inject AuthorizeServices authorizeServices
@inject SharedAuthDataService _sharedAuthData

<div class="mt-3">
    <FluentStack>
        <FluentButton IconStart="@(new Icons.Regular.Size16.Add())" Appearance="Appearance.Accent" OnClick="AddOffer">
            Add Offer
        </FluentButton>
    </FluentStack>
</div>

<div class="row m-3 mt-4">

    <div class="col-12">
        <!-- Filters -->
        <div class="d-flex justify-content-start">
            <div>
                <FluentCombobox Autocomplete="ComboboxAutocomplete.Both"
                                AriaLabel="Pre-selected option"
                                Height="400px"
                                Items="@_projects"
                                TOption="ProjectVM"
                                OptionValue="@((t) => t.Id.ToString())"
                                OptionText="@((t) => t.Name)"
                                OptionSelected="@(i => i.Id == _selectedProject?.Id)"
                                SelectedOptionChanged="@(async (o) => await _onProjectSelectionChanged(o))"/>
            </div>
            <div>
                <FluentCombobox Autocomplete="ComboboxAutocomplete.Both"
                                AriaLabel="Pre-selected option"
                                Height="400px"
                                Items="@_offerStates"
                                TOption="OfferStateVM"
                                OptionValue="@((t) => t.Id.ToString())"
                                OptionText="@((t) => t.Name)"
                                OptionSelected="@(i => i.Id == _selectedOfferState?.Id)"
                                SelectedOptionChanged="@(async (o) => await _onStateSelectionChanged(o))" />
            </div>
            <div class="ms-2">
                <FluentCombobox Autocomplete="ComboboxAutocomplete.Both"
                                AriaLabel="Pre-selected option"
                                Height="400px"
                                Items="@_offerTypes"
                                TOption="OfferTypeVM"
                                OptionValue="@((t) => t.Id.ToString())"
                                OptionText="@((t) => t.Name)"
                                OptionSelected="@(i => i.Id == _selectedOfferType?.Id)"
                                SelectedOptionChanged="@(async (o) => await _onTypeSelectionChanged(o))" />
            </div>
        </div>
    </div>

    <!-- Offers Table -->
    <div class="col-12 border border-1 rounded mt-1">
        <div>
            <FluentDataGrid Items="@FilteredItems"
                            ResizableColumns=true
                            Pagination="@pagination"
                            TGridItem="OfferVM"
                            GridTemplateColumns="0.2fr 0.2fr 0.2fr 0.2fr 0.2fr 0.2fr 0.2fr 0.2fr 0.2fr 0.2fr 100px"
                            style="height: 240px; overflow:auto;">

                <TemplateColumn Title="Project"
                                Sortable="true"
                                InitialSortDirection=SortDirection.Descending
                                IsDefaultSortColumn=true
                                Style="min-width: 200px;">
                    <ColumnOptions>
                        <div class="search-box">
                            <FluentSearch type="search"
                                          Autofocus=true
                                          @bind-Value="@_projectNameFilter"
                                          Placeholder="Project name..."
                                          @oninput="@HandleFilter" />
                        </div>
                    </ColumnOptions>
                    <ChildContent>
                        @(context.Project.Name)
                    </ChildContent>
                </TemplateColumn>

                <PropertyColumn Property="@(p => p.State.Name)" Sortable="true" Title="State" Style="min-width: 150px;" />
                <PropertyColumn Property="@(p => p.Type.Name)" Sortable="true" Title="Type" Style="min-width: 100px;" />
                <PropertyColumn Property="@(p => p.Code)" Sortable="true" Title="Code" Style="min-width: 150px;" />
                <PropertyColumn Property="@(p => p.Date)" Sortable="true" Format="dd-mm-yyyy" Title="Date" Style="min-width: 100px;" />
                <PropertyColumn Property="@(p => p.PudgetPrice)" Sortable="true" Title="Pudget" Style="min-width: 100px;" />
                <PropertyColumn Property="@(p => p.OfferPrice)" Sortable="true" Title="Price" Style="min-width: 100px;" />
                <PropertyColumn Property="@(p => p.Description)" Sortable="true" Title="Description" Style="min-width: 200px;" />

                <TemplateColumn Title="Actions" Align="@Align.End">
                    <FluentButton aria-label="Edit" IconEnd="@(new Icons.Regular.Size16.Edit())" OnClick="@(() => _edit(context))" />
                    <FluentButton aria-label="Delete" IconEnd="@(new Icons.Regular.Size16.Delete())" OnClick="@(() => _delete(context))" />
                </TemplateColumn>

            </FluentDataGrid>
        </div>
        <div style="max-width: 64vw; margin: 0 auto;">
            <FluentPaginator State="@pagination">
                <SummaryTemplate>
                    There are <strong>@(pagination.TotalItemCount ?? 0)</strong> rows
                </SummaryTemplate>
                <PaginationTextTemplate>
                    This is page <strong>@(pagination.CurrentPageIndex + 1)</strong> out of a total of <strong>@(pagination.LastPageIndex + 1)</strong> pages
                </PaginationTextTemplate>
            </FluentPaginator>
        </div>
    </div>

</div>

<!-- Dialog -->
<FluentDialog @ref="_dialog"
              Hidden="@(!_isDialogOdepened)"
              Modal="false"
              DialogType=@DialogType.Panel
              style="--dialog-width: 640px !important;
                     --dialog-height: auto !important;">

    <div class="modal-body row mb-1">

        <div class="col-12 dialog-header">
            <span class="carbon--close-outline float-end" @onclick="@CloseDialogClick"></span>
        </div>

        <div class="col-12 justify-content-center">
            @if (_selectedOffer != null)
            {
                <OfferDetailed States="@_offerStates"
                               Types="@_offerTypes" 
                               Offer="@_selectedOffer"
                               OnCansel="@CloseDialogClick"
                               OnSave="@(async () => await SaveDialogClick())" />
            }
        </div>

    </div>

</FluentDialog>

<!-- On Delete Dialog -->
<FluentDialog @ref="_deleteDialog"
              Hidden="@(!_isDeleteDialogOdepened)"
              Modal="true"
              DialogType=@DialogType.Panel
              style="--dialog-width: auto !important;
                         --dialog-width: auto !important;">

    <div class="modal-body row mb-1">

        <div class="col-12 dialog-header row">
            <div class="col-10">
                <h3>Delete Record</h3>
            </div>
            <span class="col-2 carbon--close-outline float-end" @onclick="OnDeleteClose"></span>
        </div>

        <div class="col-12 justify-content-center">
            @if(_selectedOffer != null)
            {
                <p>Are you sure you want delete @_selectedOffer.Code</p>
            }
        </div>

    </div>

    <div class="row">
        <FluentButton class="col-6"
                      OnClick="@(async () => await OnDeleteAccept())">
            Ok
        </FluentButton>
        <FluentButton class="col-6" OnClick="@(() => OnDeleteClose())">
            Cancel
        </FluentButton>
    </div>

</FluentDialog>
