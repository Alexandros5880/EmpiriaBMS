@using EmpiriaBMS.Front.ViewModel.DefaultComponents;

@if (Peginator.PagesCounter > 1)
{
    <div class="mt-3 me-1" style="float: right !important;">

        <b>@Peginator.PageIndex</b> / @Peginator.PagesCounter

        <nav class="mt-1">
            <ul class="pagination shadow bg-white rounded">

                <li class="@((Peginator.IsFirstPage() ? "page-item disabled" : "page-item"))">
                    <a class="page-link"
                       href="#"
                       tabindex="-1"
                       @onclick="async () => await PeginatorPrevius()">Previous</a>
                </li>

                @if (Peginator.PagesCounter >= 3)
                {
                    <li class="@((Peginator.IsSelected(Peginator.FirstDisplayed) ? "page-item active" : "page-item"))">
                        <a class="page-link"
                           href="#"
                           @onclick="async () => await PeginatorSetIndex(Peginator.FirstDisplayed)">
                           @Peginator.FirstDisplayed
                         </a>
                    </li>

                    <li class="@((Peginator.IsSelected(@Peginator.MiddleDisplayed) ? "page-item active" : "page-item"))">
                        <a class="page-link"
                           href="#"
                           @onclick="async () => await PeginatorSetIndex(Peginator.MiddleDisplayed)">
                           @Peginator.MiddleDisplayed
                        </a>
                    </li>

                    <li class="@((Peginator.IsSelected(@Peginator.LastDisplayed) ? "page-item active" : "page-item"))">
                        <a class="page-link"
                           href="#"
                           @onclick="async () => await PeginatorSetIndex(Peginator.LastDisplayed)">
                           @Peginator.LastDisplayed
                         </a>
                    </li>
                }

                <li class="@((Peginator.IsLastPage() ? "page-item disabled" : "page-item"))">
                    <a class="page-link"
                       href="#"
                       @onclick="async () => await PeginatorNext()">Next</a>
                </li>

            </ul>
        </nav>
    </div>
}


@code {

    [Parameter]
    public EventCallback Renderer { get; set; }

    public PaginatorVM Peginator { get; protected set; } = new PaginatorVM(7);

    public int PageSize => Peginator.PageSize;

    public int PageIndex => Peginator.PageIndex;

    private async Task PeginatorNext() =>
        await Peginator.Next(Renderer);

    private async Task PeginatorPrevius() =>
        await Peginator.Previus(Renderer);

    private async Task PeginatorSetIndex(int pageIndex) =>
        await Peginator.SetPageIndex(pageIndex, Renderer);

    public void SetRecordsLength(int length)
    {
        Peginator.SetRecordsLength(length);
    }

    public void SetVM(PaginatorVM peginator)
    {
        Peginator = peginator;
    }
}
