@using EmpiriaBMS.Front.ViewModel.DefaultComponents;

<div class="mt-3" style="float: right !important;">
    
    @SetPeginator.PageIndex / @SetPeginator.PagesCounter
    
    <nav aria-label="Page navigation example">
        <ul class="pagination">

            <li class="@((SetPeginator.IsFirstPage() ? "page-item disabled" : "page-item"))">
                <a class="page-link"
                   href="#"
                   tabindex="-1"
                   @onclick="async () => await PeginatorPrevius()">Previous</a>
            </li>

            <li class="@((SetPeginator.IsSelected(SetPeginator.FirstDisplayed) ? "page-item active" : "page-item"))">
                <a class="page-link"
                   href="#"
                   @onclick="async () => await PeginatorSetIndex(1)">@SetPeginator.FirstDisplayed</a>
            </li>

            <li class="@((SetPeginator.IsSelected(@SetPeginator.MiddleDisplayed) ? "page-item active" : "page-item"))">
                <a class="page-link"
                   href="#"
                   @onclick="async () => await PeginatorSetIndex(1)">@SetPeginator.MiddleDisplayed</a>
            </li>

            <li class="@((SetPeginator.IsSelected(@SetPeginator.LastDisplayed) ? "page-item active" : "page-item"))">
                <a class="page-link"
                   href="#"
                   @onclick="async () => await PeginatorSetIndex(1)">@SetPeginator.LastDisplayed</a>
            </li>

            <li class="@((SetPeginator.IsLastPage() ? "page-item disabled" : "page-item"))">
                <a class="page-link"
                   href="#"
                   @onclick="async () => await PeginatorNext()">Next</a>
            </li>

        </ul>
    </nav>
</div>

@code {

    [Parameter]
    public EventCallback Renderer { get; set; }

    [Parameter]
    public PaginatorVM SetPeginator { get; set; }

    private async Task PeginatorNext() =>
        await SetPeginator.Next(Renderer);

    private async Task PeginatorPrevius() =>
        await SetPeginator.Previus(Renderer);

    private async Task PeginatorSetIndex(int pageIndex) =>
        await SetPeginator.SetPageIndex(pageIndex, Renderer);

}
