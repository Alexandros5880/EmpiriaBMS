@page "/dashboard"

@layout MainLayout

@using EmpiriaBMS.Front.Components.Invoices
@using EmpiriaBMS.Front.Components.Leads
@using Microsoft.Fast.Components.FluentUI
@using EmpiriaBMS.Front.Components.General
@using EmpiriaBMS.Front.Components
@using EmpiriaBMS.Front.Components.Offers
@using EmpiriaBMS.Front.Components.KPIS
@using EmpiriaBMS.Front.Horizontal
@using EmpiriaBMS.Front.Services
@using EmpiriaBMS.Front.Components.Admin
@using Color = Microsoft.Fast.Components.FluentUI.Color;
@using EmpiriaBMS.Core.Services.DBManipulation;
@using EmpiriaBMS.Front.Components.WorkingHours;

@inject TeamsFx teamsfx
@inject TeamsUserCredential teamsUserCredential
@inject MicrosoftTeams MicrosoftTeams
@inject IWebHostEnvironment HostEnvironment
@inject IConfiguration Configuration
@inject NavigationManager MyNavigationManager
@inject IDataProvider _dataProvider
@inject IMapper Mapper
@inject TimerService TimerService
@inject AuthorizeServices authorizeServices
@inject SharedAuthDataService _sharedAuthData
@inject IDialogService DialogService
@inject DatabaseBackupService DatabaseBackupService
@inject Logging.LoggerManager Logger

<!-- Loading -->
<FluentOverlay @bind-Visible="@_startLoading"
               Opacity="0.1"
               BackgroundColor="#444791">
    <FluentProgressRing />
</FluentOverlay>

@if (!_startLoading)
{
    <FluentTabs @bind-ActiveTabId="@activeid" OnTabChange="HandleOnTabChange">

        <!-- Dashboard -->
        <FluentTab Class="my-fluent-tab mb-3" 
                   LabelClass="my-fluent-tab-label"
                   Label=" Home"
                   Icon="@(new Icons.Regular.Size48.ScanDash())"
                   Id="tab-home">
            <div class="row justify-content-center mt-1 mb-1">
                <div class="col-auto" style="width: 100%; height: 100%;">
                    <div class="m-1 row justify-content-center">
                        <div class="col-12 p-2" style="overflow-x:hidden; margin: 0 auto;">

                            <!-- Headder -->
                            <div class="mt-2 shadow p-2">
                                @if (_sharedAuthData.LogedUser != null)
                                {
                                <FluentStack Orientation="Orientation.Horizontal"
                                             Class="d-flex justify-content-between m-1"
                                             Wrap="true">

                                        <!-- User Name + Roles + Current Date -->
                                        <div class="row">
                                            <div class="col">
                                                <h4 class="mt-3" style="width: 300px;">
                                                    @{
                                                        var rolesNames = "";
                                                        foreach (var role in _sharedAuthData.LoggedUserRoles)
                                                        {
                                                            rolesNames += $"   {role.Name}";
                                                        }
                                                    }
                                                    <span class="my-tooltip" data-bs-toggle="tooltip" data-bs-placement="top" title="@rolesNames">
                                                        @_sharedAuthData.LogedUser.LastName &ensp; @_sharedAuthData.LogedUser.FirstName
                                                    </span>
                                                </h4>
                                            </div>
                                            <div class="col mt-3">
                                                <h4>@CurentDate</h4>
                                            </div>
                                        </div>

                                        <!-- Start / Stop Buttons -->
                                        <div class="d-grid ms-4">
                                            @if (editMyHours && !_isEndWorkDialogOdepened)
                                            {
                                                @if (isWorkingMode)
                                                {
                                                    <button type="button"
                                                            class="btn btn-danger btn-lg"
                                                            style="width: 400px;"
                                                            @onclick="@(async () => await StopWorkClick())">
                                                        <span>@elapsedTime.ToString(@"hh\:mm\:ss")</span>
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button type="button"
                                                            class="btn btn-success btn-lg"
                                                            style="width: 400px;"
                                                            @onclick="@StartWorkClick">
                                                        Press Work Start
                                                    </button>
                                                }
                                            }
                                        </div>

                                        <!-- Teams Requested Users Badge -->
                                        @if (seeTeamsRequestedUsers)
                                        {
                                            <div style="width: 50px; margin-top: 4px;">
                                                <FluentCounterBadge Count="@_teamsRequestedUsers.Count"
                                                                    ShowZero="false"
                                                                    Appearance="Appearance.Neutral"
                                                                    HorizontalPosition="-25"
                                                                    BottomPosition="-25">
                                                    <FluentButton OnClick="@OpenTeamsRequestedUsersClick"
                                                                  Appearance="Appearance.Accent">
                                                        <FluentIcon Value="@(new Icons.Regular.Size24.People())"
                                                                    Color="@Color.Fill" />
                                                    </FluentButton>
                                                </FluentCounterBadge>
                                            </div>
                                        }

                                        <!-- Issues Badge -->
                                        <div style="width: 50px; margin-top: 4px;">
                                            <FluentCounterBadge Count="@_issues.Count"
                                                                ShowZero="false"
                                                                Appearance="Appearance.Neutral"
                                                                HorizontalPosition="-25"
                                                                BottomPosition="-25">
                                                <FluentButton OnClick="@OpenIssuesClick"
                                                              Appearance="Appearance.Accent">
                                                    <FluentIcon Value="@(new Icons.Regular.Size24.Alert())"
                                                                Color="@Color.Fill" />
                                                </FluentButton>
                                            </FluentCounterBadge>
                                        </div>

                                        <!-- Display Hours Passed -->
                                        @if (seeMyHours)
                                        {
                                            <div class="primary-bg-color rounded float-end" style="min-width: 300px;">
                                                <div class="h5 text-center m-2">
                                                    <span class="align-middle">My Total Hours This Month: </span>
                                                    <b class="align-middle">@_userTotalHoursThisMonth</b>
                                                </div>
                                            </div>
                                        }

                                        <!-- Refresh / RestoreDB / BackupDB Page -->
                                        <FluentStack Orientation="Orientation.Horizontal" 
                                                     HorizontalAlignment="HorizontalAlignment.End"
                                                     Wrap="true"
                                                     Style="width: 140px;">
                                            <!-- Refresh -->
                                            <FluentButton IconStart="@(new Icons.Regular.Size32.ArrowClockwise())"
                                                          Loading="@_refreshLoading"
                                                          Appearance="Appearance.Outline"
                                                          OnClick="@Refresh"
                                                          Style="width: 40px;">
                                            </FluentButton>
                                            <FluentStack Orientation="Orientation.Vertical"
                                                         Style="margin-left: 4px; max-width: 80px;">
                                                <!-- Restore Database -->
                                                @if (seeRestoreDatabase)
                                                {
                                                    <InputFile @ref="@fileRestoreDB" OnChange="RestoreDb" style="display: none;" />
                                                    <FluentButton IconStart="@(new MyIcons.Size32.RestoreDB())"
                                                                  Loading="@_restoreLoading"
                                                                  Appearance="Appearance.Outline"
                                                                  OnClick="@(async () => await TriggerRestoreDbInport())">
                                                    </FluentButton>
                                                }
                                                <!-- BackUp Database -->
                                                @if (seeBackupDatabase)
                                                {
                                                    <FluentButton OnClick="@(async() => await BackUpDb())"
                                                                  Loading="@_backUpLoading"
                                                                  IconStart="@(new MyIcons.Size32.BackupDB())"
                                                                  Appearance="Appearance.Outline">
                                                    </FluentButton>
                                                }
                                            </FluentStack>
                                        </FluentStack>

                                    </FluentStack>
                                }
                            </div>

                            <!-- Leads -->
                            @if (seeLeadsOnDashboard)
                            {
                                <div class="mt-3">
                                    <FluentAccordion>
                                        <FluentAccordionItem Expanded="false">
                                            <HeadingTemplate>
                                                <div class="accordion-header">
                                                    <h3>Leads</h3>
                                                </div>
                                            </HeadingTemplate>
                                            <ChildContent>
                                                <Leads />
                                            </ChildContent>
                                        </FluentAccordionItem>
                                    </FluentAccordion>
                                </div>
                            }

                            <!-- Offers -->
                            @if (seeOffers)
                            {
                                <div class="mt-2">
                                    <FluentAccordion>
                                        <FluentAccordionItem Expanded="true">
                                            <HeadingTemplate>
                                                <div class="accordion-header">
                                                    <h3>Offers</h3>
                                                </div>
                                            </HeadingTemplate>
                                            <ChildContent>
                                                <Offers />
                                            </ChildContent>
                                        </FluentAccordionItem>
                                    </FluentAccordion>
                                </div>
                            }

                            <div class="mt-2 row">

                                <div class="@((seeAdmin ? "col-lg" : "")) col-md col-sm mt-3"
                                     style="min-width: @(isWorkingMode ? "660px" : "500px")">
                                    <!-- Table Projects -->
                                    @if (!_isEndWorkDialogOdepened)
                                    {
                                        <div style="height: 74px;">
                                            <div class="text-center row me-2">
                                                <h3 class="@((_selectedProject != null ? "col-6" : "col-11"))">Projects</h3>
                                            </div>
                                            <div class="text-center row me-2">
                                                <div class="col-6">
                                                    <FluentSearch @bind-Value="@_projectNameFilter"
                                                                  @oninput="@HandleProjectFilter"
                                                                  Placeholder="Search Project" 
                                                                  Style="max-width: 300px; margin-left: 14px; margin-bottom: 4px;"/>
                                                </div>
                                                <div class="col-6">
                                                    <FluentStack HorizontalAlignment="HorizontalAlignment.End">
                                                        @if (isWorkingMode && editProject)
                                                        {
                                                            @if (_selectedProject != null)
                                                            {
                                                                <span class="navigate-outline my-tooltip" data-bs-toggle="tooltip" data-bs-placement="top" title="Navigate To"
                                                                style="display: @((_selectedProject?.Offer?.Lead?.Address != null ? "block" : "none" ));"
                                                                @onclick="@(async () => await NavigateOnMap(_selectedProject?.Offer?.Lead?.Address))" />

                                                                @* <span class="fluent--delete-28-regular"
                                                                        @onclick="@(() => DeleteProject())" /> *@

                                                                <span class="material-symbols--edit-outline"
                                                                @onclick="@(async () => await EditProject())" />
                                                            }
                                                            @* <span class="grommet-icons--add"
                                                                @onclick="@(() => AddProject())" /> *@
                                                        }

                                                        <FluentButton IconStart="@(new Icons.Regular.Size16.ArrowExport())"
                                                                        Appearance="Appearance.Outline"
                                                                        OnClick="@(async (e) => await ExportProjectsToCSV())"
                                                                        Disabled="@(_projects.Count() == 0)">
                                                            Export
                                                        </FluentButton>

                                                    </FluentStack>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="table-responsive p-1 table-container"
                                             style="overflow-x: auto !important;">
                                            <table class="table table-hover table-success text-center">
                                                <thead>
                                                    <tr>
                                                        <th scope="col" class="sticky-header">Status</th>
                                                        <th scope="col" class="sticky-header">Project</th>
                                                        <th scope="col" class="sticky-header">Work Package Declared Completed</th>
                                                        <th scope="col" class="sticky-header">Estimated Hours Completed</th>
                                                        <th scope="col" class="sticky-header">Deadline</th>
                                                        @if (isWorkingMode)
                                                        {
                                                            <th scope="col" class="sticky-header">Issue</th>
                                                        }
                                                        @if (isWorkingMode && assignPm)
                                                        {
                                                            <th scope="col" class="sticky-header">PM</th>
                                                        }
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @*
                                                        @(( @GetProjectMenHours(project.Id) > project.EstimatedHours ? "table-warning" : ""))
                                                        @(( project.DeadLine < DateTime.Now ? "table-danger" : ""))
                                                        @(( project.EstimatedCompleted >= 100 || !project.Active ? "table-secondary" : ""))
                                                    *@
                                                    @foreach (var project in _filteredProjects)
                                                    {
                                                        <tr class="align-middle">

                                                            <td class="align-middle
                                                            @((_selectedProject == null ||
                                                                    !_selectedProject.Id.Equals(project.Id)
                                                                                    ? "" : "selected_table_projects_row"))"
                                                                style="word-wrap: break-word; max-width: 110px;"
                                                                @onclick="@(async () => await OnSelectProject(project.Id))">

                                                                @if (@GetProjectMenHours(project.Id) > project.EstimatedHours)
                                                                {
                                                                    <span class="icon-worked-hours-passed"></span>
                                                                }
                                                                else if (project.DeadLine < DateTime.Now)
                                                                {
                                                                    <span class="icon-missed-deadline"></span>
                                                                }
                                                                else if (project.EstimatedCompleted >= 100 || !project.Active)
                                                                {
                                                                    <span class="icon-estimation-completion-passed"></span>
                                                                }
                                                                else
                                                                {
                                                                    <span class="icon-all-ok"></span>
                                                                }

                                                            </td>

                                                            <td class="align-middle
                                                            @((_selectedProject == null ||
                                                                    !_selectedProject.Id.Equals(project.Id)
                                                                                    ? "" : "selected_table_projects_row"))"
                                                                style="word-wrap: break-word; max-width: 110px;"
                                                                @onclick="@(async () => await OnSelectProject(project.Id))">
                                                                <labe>@project.Name</labe>
                                                            </td>

                                                            <td class="align-middle
                                                            @((_selectedProject == null ||
                                                                    !_selectedProject.Id.Equals(project.Id)
                                                                                    ? "" : "selected_table_projects_row"))"
                                                                @onclick="@(async () => await OnSelectProject(project.Id))">
                                                                <label>@(project.DeclaredCompleted.ToString("##0.0")) %</label>
                                                            </td>

                                                            <td class="align-middle
                                                            @((_selectedProject == null ||
                                                                    !_selectedProject.Id.Equals(project.Id)
                                                                                    ? "" : "selected_table_projects_row"))"
                                                                @onclick="@(async () => await OnSelectProject(project.Id))">
                                                                <label>@(project.EstimatedCompleted.ToString("##0.0")) %</label>
                                                            </td>

                                                            <td class="align-middle
                                                            @((_selectedProject == null ||
                                                                    !_selectedProject.Id.Equals(project.Id)
                                                                                    ? "" : "selected_table_projects_row"))"
                                                                @onclick="@(async () => await OnSelectProject(project.Id))"
                                                                style="min-width: 100px;">
                                                                <label>@project.DeadLine?.ToEuropeFormat()</label>
                                                            </td>

                                                            @if (isWorkingMode)
                                                            {
                                                                <td class="align-middle
                                                                @((_selectedProject == null ||
                                                                    !_selectedProject.Id.Equals(project.Id)
                                                                                    ? "" : "selected_table_projects_row"))">
                                                                    <span class="majesticons--chat-2-text"
                                                                          @onclick="@OnAddIssueClick">
                                                                    </span>
                                                                </td>
                                                            }

                                                            @if (isWorkingMode && assignPm)
                                                            {
                                                                <td class="align-middle
                                                                @((_selectedProject == null ||
                                                                        !_selectedProject.Id.Equals(project.Id)
                                                                                        ? "" : "selected_table_projects_row"))">
                                                                    @if (project?.Offer?.SubCategory?.CanAssignePM ?? false)
                                                                    {
                                                                        @if (!string.IsNullOrEmpty(project.PmName))
                                                                        {
                                                                            <button type="button" class="btn btn-outline-info default-color"
                                                                                    @onclick="@(async (x) => await OnProjectAssignClick(project))">
                                                                                @project.PmName
                                                                            </button>
                                                                        }
                                                                        else
                                                                        {
                                                                            <span class="clarity--assign-user-line"
                                                                                  @onclick="@(async (x) => await OnProjectAssignClick(project))">
                                                                            </span>
                                                                        }
                                                                    }
                                                                </td>
                                                            }

                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    }
                                </div>

                                <div class="@((seeAdmin ? "col-xl col-lg" : "")) col-md col-sm mt-3"
                                     style="min-width:440px">
                                    <!-- Table Disciplines -->
                                    @if (_selectedProject != null && !_isEndWorkDialogOdepened)
                                    {
                                        <div style="height: 74px;">
                                            <div class="text-center row me-2">
                                                <h3 class="@((isWorkingMode ? "col-8" : "col-11"))">Disciplines</h3>
                                            </div>
                                            <div class="text-center row me-2">
                                                <div class="col-6">

                                                </div>
                                                <div class="col-6">
                                                    <FluentStack HorizontalAlignment="HorizontalAlignment.End">
                                                        @if (isWorkingMode && editDiscipline)
                                                        {
                                                            @if (_selectedDiscipline != null)
                                                            {
                                                                <span class="fluent--delete-28-regular"
                                                                      @onclick="@(() => DeleteDiscipline())" />
                                                                <span class="material-symbols--edit-outline"
                                                                      @onclick="@(async () => await EditDiscipline())" />
                                                            }
                                                            @if (_hasDisciplinesSelections)
                                                            {
                                                                <span class="grommet-icons--add"
                                                                      @onclick="@(async () => await AddDiscipline())" />
                                                            }
                                                        }

                                                        <FluentButton IconStart="@(new Icons.Regular.Size16.ArrowExport())"
                                                                      Appearance="Appearance.Outline"
                                                                      OnClick="@(async (e) => await ExportDisciplinesToCSV())"
                                                                      Disabled="@(_disciplines.Count() == 0)">
                                                            Export
                                                        </FluentButton>
                                                    </FluentStack>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="table-responsive p-1 table-container">
                                            <table class="table table-hover table-danger text-center">
                                                <thead>
                                                    <tr>
                                                        <th scope="col" class="sticky-header" style="word-wrap: break-word; max-width: 100px;">Discipline</th>
                                                        <th scope="col" class="sticky-header" style="word-wrap: break-word; max-width: 100px;">Estimated Discipline Hours</th>
                                                        @if (isWorkingMode && assignEngineer)
                                                        {
                                                            <th scope="col"></th>
                                                        }
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var discipline in _disciplines)
                                                    {
                                                        <tr class="align-middle
                                                                @(( @GetDisciplineMenHours(discipline.Id) > discipline.EstimatedHours ? "table-danger" : ""))"
                                                            @onclick="@(async () => await OnSelectDiscipline(discipline.Id))">

                                                            <td class="align-middle
                                                            @(((_selectedDiscipline == null
                                                                || !_selectedDiscipline.Id.Equals(discipline.Id))
                                                                    ? "" : "selected_table_disciplines_row"))"
                                                                style="word-wrap: break-word; max-width: 100px;">
                                                                <labe>@discipline.Type.Name</labe>
                                                            </td>

                                                            <td class="align-middle text-center
                                                            @(((_selectedDiscipline == null
                                                                || !_selectedDiscipline.Id.Equals(discipline.Id))
                                                                    ? "" : "selected_table_disciplines_row"))"
                                                                style="word-wrap: break-word; max-width: 100px;">
                                                                <label>@(discipline.EstimatedCompleted.ToString("##0.0")) %</label>
                                                            </td>

                                                            @if (isWorkingMode && assignEngineer)
                                                            {
                                                                <td class="align-middle
                                                                @((_selectedDiscipline == null ||
                                                                        !_selectedDiscipline.Id.Equals(discipline.Id)
                                                                                        ? "" : "selected_table_disciplines_row"))">
                                                                    <span class="clarity--assign-user-line"
                                                                          @onclick="@(async (x) => await OnDesciplineAssignClick(discipline))">
                                                                    </span>
                                                                </td>
                                                            }

                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>
                                    }
                                </div>

                                <div class="row @((seeAdmin ? "col-xl col-lg" : "")) col-md col-sm mt-3"
                                     style="min-width:460px">

                                    <!-- Table Deliverables -->
                                    <div class="col" style="min-width:460px">
                                        @if (_selectedDiscipline != null && !_isEndWorkDialogOdepened)
                                        {
                                            <div style="height: 74px;">
                                                <div class="text-center row me-2">
                                                    <h3 class="@((_selectedProject != null ? "col-9" : "col-11"))">Deliverables</h3>
                                                </div>
                                                <div class="text-center row me-2">
                                                    <div class="col-6">
                                                    </div>
                                                    <div class="col-6">
                                                        <FluentStack HorizontalAlignment="HorizontalAlignment.End">
                                                            @if (isWorkingMode && editDeliverable)
                                                            {
                                                                @if (__selectedDeliverable != null)
                                                                {
                                                                    <span class="fluent--delete-28-regular"
                                                                          @onclick="@(() => DeleteDeliverable())" />
                                                                    @if (_hasDeliverablessSelections)
                                                                    {
                                                                        <span class="material-symbols--edit-outline"
                                                                              @onclick="@(() => EditDeliverable())" />
                                                                    }
                                                                }
                                                                @if (_hasDeliverablessSelections)
                                                                {
                                                                    <span class="grommet-icons--add"
                                                                          @onclick="@(() => AddDeliverable())" />
                                                                }
                                                            }

                                                            <FluentButton IconStart="@(new Icons.Regular.Size16.ArrowExport())"
                                                                          Appearance="Appearance.Outline"
                                                                          OnClick="@(async (e) => await ExportDeliverablesToCSV())"
                                                                          Disabled="@(_deliverables.Count() == 0)">
                                                                Export
                                                            </FluentButton>
                                                        </FluentStack>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="table-responsive p-1 table-container">
                                                <table class="table table-hover table-primary text-center">
                                                    <thead>
                                                        <tr>
                                                            <th scope="col" class="sticky-header">Deliverable</th>
                                                            <th scope="col" class="sticky-header">Total Hours</th>
                                                            <th scope="col" class="sticky-header">Declared Completion</th>
                                                            @if (isWorkingMode && assignDesigner)
                                                            {
                                                                <th scope="col"></th>
                                                            }
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var deliverable in _deliverables)
                                                        {
                                                            <tr class="align-middle"
                                                                @onclick="@(() => OnSelectDeliverable(deliverable))">

                                                                <td class="align-middle
                                                            @(((__selectedDeliverable == null ||
                                                                    !__selectedDeliverable.Id.Equals(deliverable.Id))
                                                                        ? "" : "selected_table_deliverables_row"))">
                                                                    <div class="align-middle h-100"><labe>@deliverable.Type.Name</labe></div>
                                                                </td>

                                                                <td class="align-middle
                                                            @(((__selectedDeliverable == null ||
                                                                    !__selectedDeliverable.Id.Equals(deliverable.Id))
                                                                        ? "" : "selected_table_deliverables_row"))">
                                                                    <label>@GetDeliverableMenHours(deliverable.Id) h</label>
                                                                </td>

                                                                <td class="align-middle
                                                            @(((__selectedDeliverable == null ||
                                                                !__selectedDeliverable.Id.Equals(deliverable.Id))
                                                                    ? "" : "selected_table_deliverables_row"))">
                                                                    <label>@deliverable.CompletionEstimation %</label>
                                                                </td>

                                                                @if (isWorkingMode && assignDesigner)
                                                                {
                                                                    <td class="align-middle
                                                                @((__selectedDeliverable == null ||
                                                                        !__selectedDeliverable.Id.Equals(deliverable?.Id)
                                                                                        ? "" : "selected_table_deliverables_row"))">
                                                                        <span class="clarity--assign-user-line"
                                                                              @onclick="@(async (x) => await OnDeliverableAssignClick(deliverable))">
                                                                        </span>
                                                                    </td>
                                                                }

                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        }
                                    </div>

                                    <!-- Table Others -->
                                    <div class="col" style="min-width:460px">
                                        @if (_selectedDiscipline != null && !_isEndWorkDialogOdepened)
                                        {
                                            <div style="height: 74px;">
                                                <div class="text-center row me-2">
                                                    <h3 class="@((_selectedProject != null ? "col-9" : "col-11"))">Supportive Works</h3>
                                                </div>
                                                <div class="text-center row me-2">
                                                    <div class="col-6">
                                                    </div>
                                                    <div class="col-6">
                                                        <FluentStack HorizontalAlignment="HorizontalAlignment.End">
                                                            @if (isWorkingMode && editSupportiveWork)
                                                            {
                                                                @if (_selectedSupportiveWork != null)
                                                                {
                                                                    <span class="fluent--delete-28-regular col-1"
                                                                          @onclick="@(() => DeleteSupportiveWork())" />
                                                                    @if (_hasSapportiveWorksSelections)
                                                                    {
                                                                        <span class="material-symbols--edit-outline col-1"
                                                                              @onclick="@(() => EditSupportiveWork())" />
                                                                    }
                                                                }
                                                                @if (_hasSapportiveWorksSelections)
                                                                {
                                                                    <span class="grommet-icons--add col-1"
                                                                          @onclick="@(() => AddSupportiveWork())" />
                                                                }
                                                            }

                                                            <FluentButton IconStart="@(new Icons.Regular.Size16.ArrowExport())"
                                                                          Appearance="Appearance.Outline"
                                                                          OnClick="@(async (e) => await ExportSupportiveWorksToCSV())"
                                                                          Disabled="@(_supportiveWork.Count() == 0)">
                                                                Export
                                                            </FluentButton>
                                                        </FluentStack>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="table-responsive p-1 table-container">
                                                <table class="table table-hover table-warning text-center">
                                                    <thead>
                                                        <tr>
                                                            <th scope="col" class="sticky-header">Supportive Work</th>
                                                            <th scope="col" class="sticky-header">Total Hours</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var _supportiveWork in _supportiveWork)
                                                        {
                                                            <tr class="align-middle" @onclick="@(() => OnSelectDoc(_supportiveWork))">

                                                                <td class="align-middle
                                                        @(((_selectedSupportiveWork == null ||
                                                                !_selectedSupportiveWork.Id.Equals(_supportiveWork.Id))
                                                                    ? "" : "selected_table_supportiveworks_row"))"
                                                                    style="min-width: 110px;">
                                                                    <div class="align-middle h-100"><labe>@_supportiveWork.Type.Name</labe></div>
                                                                </td>

                                                                <td class="align-middle
                                                        @(((_selectedSupportiveWork == null ||
                                                                !_selectedSupportiveWork.Id.Equals(_supportiveWork.Id))
                                                                    ? "" : "selected_table_supportiveworks_row"))"
                                                                    style="min-width: 90px;max-width: 90px; margin: 0 auto;">
                                                                    <label>@GetOtherMenHours(_supportiveWork.Id) h</label>
                                                                </td>

                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        }
                                    </div>

                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </FluentTab>

        <!-- Invoices -->
        @if (seeInvoices)
        {
            <FluentTab Class="my-fluent-tab"
                       LabelClass="my-fluent-tab-label"
                       Label=" Invoices"
                       Icon="@(new MyIcons.Size20.Invoices2())"
                       Id="tab-invoices">

                <div class="row justify-content-center mt-1 mb-1">
                    <div class="col-auto" style="width: 100%; height: 100%;">
                        <div class="m-1 row justify-content-center">
                            <div class="col-12 p-2 row g-2 mb-5" style="overflow-x:hidden; margin: 0 auto;">

                                <div class="col-xl-7 col-lg-7 col-md-12 col-sm-12 col-xs-12">
                                    <Invoices @ref="@_invoiceListRef" OnSelect="@(async (i) => await _onSelectedInvoice(i))" SelectedRecord="@_selectedInvoice" />
                                </div>

                                @if (_selectedInvoice != null && _selectedInvoice.Id != 0)
                                {
                                    <div class="col-xl-5 col-lg-5 col-md-12 col-sm-12 col-xs-12">
                                        <InvoiceDetailed @ref="@_invoiceDetailedRef"
                                                         Content="@_selectedInvoice"
                                                         Title="Invoice Detailes"
                                                         OnSave="@(async (i) => await _onSaveInvoice(i))" />
                                    </div>
                                    <div class="col-12">
                                        <Payments @ref="@_invoicePaymentsRef" Invoice="@_selectedInvoice" />
                                    </div>
                                }

                            </div>
                        </div>
                    </div>
                </div>
            </FluentTab>
        }

        <!-- Excpences -->
        @if(seeExpenses)
        {
            <FluentTab Class="my-fluent-tab"
                       LabelClass="my-fluent-tab-label"
                       Label=" Excpences"
                       Icon="@(new MyIcons.Size20.Expenses())"
                       Id="tab-excpences">

                <div class="row justify-content-center mt-1 mb-1">
                    <div class="col-auto" style="width: 100%; height: 100%;">
                        <div class="m-1 row justify-content-center">
                            <div class="col-12 p-2" style="overflow-x:hidden; margin: 0 auto;">

                                <h3>Expenses</h3>

                            </div>
                        </div>
                    </div>
                </div>
            </FluentTab>
        }

        <!-- KPIS -->
        @if (seeKpis)
        {
            <FluentTab Class="my-fluent-tab" 
                       LabelClass="my-fluent-tab-label" 
                       Label=" KPIs" 
                       Icon="@(new Icons.Regular.Size48.ChartPerson())" 
                       Id="tab-kpis">
            
                    <div class="row justify-content-center mt-1 mb-1">
                        <div class="col-auto" style="width: 100%; height: 100%;">
                            <div class="m-1 row justify-content-center">
                                <div class="col-12 p-2" style="overflow-x:hidden; margin: 0 auto;">

                                    <KpisLand />

                                </div>
                            </div>
                        </div>
                    </div>
            </FluentTab>
        }

        <!-- Change Everybody Hours -->
        @if (canChangeEverybodyHours)
        {
            <FluentTab Class="my-fluent-tab"
                       LabelClass="my-fluent-tab-label"
                       Label="Hours"
                       Icon="@(new Icons.Regular.Size48.Clock())"
                       Id="tab-employee-hours">

                <div class="row justify-content-center mt-1 mb-1">
                    <div class="col-auto" style="width: 100%; height: 100%;">
                        <div class="m-1 row justify-content-center">
                            <div class="col-12 p-2" style="overflow-x:hidden; margin: 0 auto;">

                                <EditUsersHours />

                            </div>
                        </div>
                    </div>
                </div>
            </FluentTab>
        }

        <!-- Admin -->
        @if (seeAdmin)
        {
            <FluentTab Class="my-fluent-tab"
                       LabelClass="my-fluent-tab-label"
                       Label=" Admin"
                       Icon="@(new Icons.Regular.Size48.Settings())"
                       Id="tab-admin">

                <div class="row justify-content-center mt-1 mb-1">
                    <div class="col-auto" style="width: 100%; height: 100%;">
                        <div class="m-1 row justify-content-center">
                            <div class="col-12 p-2" style="overflow-x:hidden; margin: 0 auto;">

                                <AdminLand />

                            </div>
                        </div>
                    </div>
                </div>
            </FluentTab>
        }

    </FluentTabs>
   
}

<!-- Dialogs -->
@if (!_startLoading)
{
    <!-- On "Press Work End" Button Dialog -->
    <FluentDialog @ref="_endWorkDialog"
                  Hidden="@(!_isEndWorkDialogOdepened || _startLoading)"
                  Modal="false"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                        --dialog-height: auto !important;">

        <EditUsersHours @ref="@_editHoursCompoment"
                        RemainingTime="@remainingTime"
                        IsFromDashboard="true"
                        OnTimeChanged="@_onTimeTimeChanged" />

        <div class="row">
            <FluentButton Disabled="@_isEndWorkAcceptDialogDisabled"
                          class="col-6"
                          OnClick="@(async () => await _endWorkDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => _endWorkDialogCansel())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On "Add Designers" Button Dialog -->
    <FluentDialog @ref="_addDesignerDialog"
                  Hidden="@(!_isAddDesignerDialogOdepened || _startLoading)"
                  Modal="false"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: 400px !important;
                         --dialog-height: auto !important;">

        <div class="badge text-dark text-wrap fs-3">
            Add Designers
        </div>

        <div class="modal-body row">
            <div class="m-1 row justify-content-center">

                <div class="col-12 p-2">

                    <div class="mt-1 p-2 modal-content">
                        <div class="d-flex justify-content-around">
                            <div class="table-responsive p-1 w-100 h-100"
                                 style="max-height: 300px !important; overflow-y: auto;">
                                 <table class="bg-transparent">
                                    <tbody>
                                        @foreach (var designer in _designers)
                                        {
                                            <tr clss="align-middle d-flex">
                                                <td class="align-middle">
                                                    <input class="form-check-input big-checkbox mt-2"
                                                           type="checkbox"
                                                           id="isSelectedDesigner"
                                                           @bind=@designer.IsSelected>
                                                </td>
                                                <td class="align-middle">
                                                    <div class="ms-3 mt-2">
                                                        @designer.LastName &nbsp; @designer.FirstName
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addDesignerDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => _addDesignerDialogCansel())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On "Add Engineers" Button Dialog -->
    <FluentDialog @ref="_addEngineerDialog"
                  Hidden="@(!_isAddEngineerDialogOdepened || _startLoading)"
                  Modal="false"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: 400px !important;
                         --dialog-height: auto !important;">

        <div class="badge text-dark text-wrap fs-3">
            Add Engineers
        </div>

        <div class="modal-body row">
            <div class="m-1 row justify-content-center">

                <div class="col-12 p-2">

                    <div class="mt-1 p-2 modal-content">
                        <div class="d-flex justify-content-around">
                            <div class="table-responsive p-1 w-100 h-100"
                                 style="max-height: 300px !important; overflow-y: auto;">
                                <table class="bg-transparent">
                                    <tbody>
                                        @foreach (var engineer in _engineers)
                                        {
                                            <tr clss="align-middle d-flex">
                                                <td class="align-middle">
                                                    <input class="form-check-input big-checkbox mt-2"
                                                           type="checkbox"
                                                           id="isSelectedDesigner"
                                                           @bind=@engineer.IsSelected>
                                                </td>
                                                <td class="align-middle">
                                                    <div class="ms-3 mt-2">
                                                        @engineer.LastName &nbsp; @engineer.FirstName
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addEngineerDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => _addEngineerDialogCansel())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On "Add Project Managers" Button Dialog -->
    <FluentDialog @ref="_addPMDialog"
                  Hidden="@(!_isAddPMDialogOdepened || _startLoading)"
                  Modal="false"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: 400px !important;
                         --dialog-height: auto !important;">

        <div class="badge text-dark text-wrap fs-3">
            Add Project Managers
        </div>

        <div class="modal-body row">
            <div class="m-1 row justify-content-center">
                <div class="col-12 p-2">
                    <select class="form-select form-select-lg" @bind="_selectedPmId">
                        @foreach (var pm in _projectManagers)
                        {
                            <option value="@pm.Id"
                                    selected="@pm.Id.Equals(_selectedPmId)"
                                    @onchange="@(e => ToggleSelection(pm, e.Value.ToString()))">
                                <span>@pm.LastName &nbsp; @pm.FirstName</span>
                            </option>
                        }
                    </select>

                </div>
            </div>
        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addPMDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => _addPMDialogCansel())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Add Issues Dialog -->
    <FluentDialog @ref="_addIssueDialog"
                  Hidden="@(!_isAddIssueDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: 700px !important;
                         --dialog-height: 94vh !important;">

        <div class="modal-body row mb-1">
            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="CloseAddIssueClick"></span>
            </div>
            <div class="col-12 justify-content-center">
                <IssueDetailed @ref="@issueCompoment" Project="@_selectedProject"/>
            </div>
        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addIssueDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => _addIssueDialogCansel())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Display Issues Dialog -->
    <FluentDialog @ref="_displayIssuesDialog"
                  Hidden="@(!_isDisplayIssuesDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: min(98vw, 1300px) !important;
                         --dialog-height: min(86vh, 1400px) !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="@(async() => await CloseIssuesClick())"></span>
            </div>

            <div class="col-12 justify-content-center">
                <Issues Source="@_issues.ToList()" OnSave="@(async() => await CloseIssuesClick())" />
            </div>

        </div>

    </FluentDialog>

    <!-- On Display TeamsRequestedUsers Dialog -->
    <FluentDialog @ref="_displayTeamsRequestedUsersDialog"
                  Hidden="@(!_isDisplayTeamsRequestedUsersDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: min(98vw, 1300px) !important;
                         --dialog-height: min(86vh, 1400px) !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="@(async() => await CloseTeamsRequestedUsersClick())"></span>
            </div>

            <div class="col-12 justify-content-center">
                <TeamsRequestedUsers Source="@_teamsRequestedUsers.ToList()" />
            </div>

        </div>

    </FluentDialog>

    <!-- On Add/Edit Project Dialog -->
    <FluentDialog @ref="_addEditProjectDialog"
                  Hidden="@(!_isAddEditProjectDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: min(80vw, 800px) !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="CloseAddProjectClick"></span>
            </div>

            <div class="col-12 justify-content-center" style="max-height: 640px; overflow-y: hidden;">
                <ProjectDetailed @ref="@projectCompoment" Content="@_selectedProject" DisplayActions="false"/>
            </div>

        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addEditProjectDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => CloseAddProjectClick())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Add/Edit Discipline Dialog -->
    <FluentDialog @ref="_addEditDisciplineDialog"
                  Hidden="@(!_isAddEditDisciplineDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                         --dialog-width: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="CloseAddDisciplineClick"></span>
            </div>

            <div class="col-12 justify-content-center">
                @if (_selectedProject != null)
                {
                    <DisciplineDetailed @ref="@disciplineCompoment" ProjectId="@_selectedProject.Id" />
                }
                else
                {
                    <h3 class="warning">No Project Selected!</h3>
                }
            </div>

        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addEditDisciplineDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => CloseAddDisciplineClick())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Add/Edit Deliverable Dialog -->
    <FluentDialog @ref="_addEditDeliverableDialog"
                  Hidden="@(!_isAddEditDeliverableDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                         --dialog-width: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="CloseAddDeliverableClick"></span>
            </div>

            <div class="col-12 justify-content-center">
                @if(_selectedDiscipline != null)
                {
                    <DeliverableDetailed @ref="@deliverableCompoment" DisciplineId="@_selectedDiscipline.Id" />
                } 
                else
                {
                    <h3 class="warning">No Discipline Selected!</h3>
                }
            </div>

        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addEditDeliverableDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => CloseAddDeliverableClick())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Add/Edit Other Dialog -->
    <FluentDialog @ref="_addEditSupportiveWorkDialog"
                  Hidden="@(!_isAddEditSupportiveWorkDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                         --dialog-width: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="CloseAddSupportiveWorkClick"></span>
            </div>

            <div class="col-12 justify-content-center">
                @if (_selectedDiscipline != null)
                {
                    <OtherDetailed @ref="@supportiveWorkrCompoment" DisciplineId="@_selectedDiscipline.Id" />
                }
                else
                {
                    <h3 class="warning">No Discipline Selected!</h3>
                }
            </div>

        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addEditSupportiveWorkDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => CloseAddSupportiveWorkClick())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Delete Dialog -->
    <FluentDialog @ref="_deleteDialog"
                  Hidden="@(!_isDeleteDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                         --dialog-width: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header row">
                <div class="col-10">
                    <h3>Delete Record</h3>
                </div>
                <span class="col-2 carbon--close-outline float-end" @onclick="OnDeleteClose"></span>
            </div>

            <div class="col-12 justify-content-center">
                <p>@_deleteDialogMsg</p>
            </div>

        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await OnDeleteAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => OnDeleteClose())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>
}
