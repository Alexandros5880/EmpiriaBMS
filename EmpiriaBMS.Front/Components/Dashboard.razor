@page "/dashboard"

@layout MainLayout

@using Microsoft.Fast.Components.FluentUI
@using EmpiriaBMS.Front.Components.General
@using EmpiriaBMS.Front.Components
@using EmpiriaBMS.Front.Horizontal
@using EmpiriaBMS.Front.Services

@inject TeamsFx teamsfx
@inject TeamsUserCredential teamsUserCredential
@inject MicrosoftTeams MicrosoftTeams
@inject IWebHostEnvironment HostEnvironment
@inject IConfiguration Configuration
@inject NavigationManager MyNavigationManager
@inject IDataProvider _dataProvider
@inject IMapper Mapper
@inject TimerService TimerService
@inject AuthorizeServices authorizeServices
@inject SharedAuthDataService _sharedAuthData

@if (_startLoading)
{
    @*
    <div style="display: flex; justify-content: center; align-items: center; margin-top: 20%;">
        <FluentProgressRing />
    </div>
    *@

    <div style="display: flex; justify-content: center; align-items: center; min-height: 100vh;">
        <FilterProgressRing FilterLoading="@_startLoading" />
    </div>
}
else
{
    <div class="row justify-content-center mt-1 mb-1">
        <div class="col-auto" style="width: 100%; height: 100%;">
            <div class="m-1 row justify-content-center">
                <div class="col-12 p-2"
                        style="overflow-x:hidden; margin: 0 auto;">
                    
                    <!-- Headder -->
                    <div class="mt-2 shadow p-2">
                        @if (_sharedAuthData.LogedUser != null)
                        {
                            <div class="row ms-2 me-8" style="overflow:hidden;">

                                <!-- User Name + Roles + Current Date -->
                                <div class="col-lg-4 col-md-8 col-sm-8 row">
                                    <div class="col">
                                        <h4 class="mt-3">
                                            @{
                                                var rolesNames = "";
                                                foreach (var role in _sharedAuthData.LoggedUserRoles)
                                                {
                                                    rolesNames += $"   {role.Name}";
                                                }
                                            }
                                            <span class="my-tooltip" data-bs-toggle="tooltip" data-bs-placement="top" title="@rolesNames">
                                                @_sharedAuthData.LogedUser.LastName &ensp; @_sharedAuthData.LogedUser.FirstName
                                            </span>
                                        </h4>
                                    </div>
                                    <div class="col mt-3">
                                        <h4>@CurentDate</h4>
                                    </div>
                                </div>

                                <!-- Start / Stop Buttons -->
                                <div class="col-lg-5 col-md-7 col-sm-7">
                                    <div class="d-grid">
                                        @if (EditMyHours && !_isEndWorkDialogOdepened)
                                        {
                                            @if (isWorkingMode)
                                            {
                                                <button type="button" class="btn btn-danger btn-lg w-50"
                                                        @onclick="@(async () => await StopWorkClick())">
                                                    <span>@elapsedTime.ToString(@"hh\:mm\:ss")</span>
                                                </button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn btn-success btn-lg w-50"
                                                        @onclick="@StartWorkClick">
                                                    Press Work Start
                                                </button>
                                            }
                                        }
                                    </div>
                                </div>

                                <!-- Issues / Display Hours Passed -->
                                <div class="col-lg-3 col-md-5 col-sm-5">
                                    <div class="d-flex justify-content-between"
                                         style="height: auto !important;">

                                        <div style="width: 50px;">
                                            @if (isWorkingMode && _issues.Count > 0)
                                            {
                                                <span class="issue mt-2"
                                                      @onclick="@(() => OpenIssuesClick())">
                                                </span>
                                            }
                                        </div>

                                        @if (SeeMyHours)
                                        {
                                            <div class="primary-bg-color rounded float-end">
                                                <div class="h5 text-center m-2">
                                                    <span class="align-middle">My Total Hours This Month: </span>
                                                    <b class="align-middle">@_userTotalHoursThisMonth</b>
                                                </div>
                                            </div>
                                        }

                                    </div>
                                </div>

                            </div>
                        }
                    </div>

                    <div class="row mt-4 p-1
                                gx-xl-1 gx-lg-1 gx-md-1 gx-sm-1
                                gy-xl-0 gy-lg-5 gy-md-5 gy-sm-5">
                        
                        <div class="col row">
                            <!-- Table Projects -->
                            <div class="col-12">
                                @if (!_isEndWorkDialogOdepened)
                                {
                                    <div class="text-center row me-2">
                                        <h3 class="@((_selectedProject != null ? "col-7" : "col-11"))">Projects</h3>
                                        @if (isWorkingMode && editProject)
                                        {
                                            @if(_selectedProject != null)
                                            {
                                                <span class="invoice col-1"
                                                      @onclick="@(async () => await AddEditInvoice())" />
                                                <span class="payment col-1"
                                                      @onclick="@(() => AddEditPayment())" />
                                                <span class="fluent--delete-28-regular col-1"
                                                      @onclick="@(() => DeleteProject())" />
                                                <span class="material-symbols--edit-outline col-1"
                                                      @onclick="@(() => EditProject())" />
                                            }
                                            <span class="grommet-icons--add col-1"
                                                  @onclick="@(() => AddProject())" />
                                        }
                                    </div>
                                    <div class="table-responsive p-1 table-container"
                                         style="overflow-x: hidden !important;">
                                        <table class="table table-hover table-success text-center">
                                            <thead>
                                                <tr>
                                                    <th scope="col" class="sticky-header">Project</th>
                                                    <th scope="col" class="sticky-header">Work Package Declared Completed</th>
                                                    <th scope="col" class="sticky-header">Estimated Hours Completed</th>
                                                    <th scope="col" class="sticky-header">Deadline</th>
                                                    @if (isWorkingMode)
                                                    {
                                                        <th scope="col" class="sticky-header">Issue</th>
                                                    }
                                                    @if (isWorkingMode && AssignPm)
                                                    {
                                                        <th scope="col" class="sticky-header">PM</th>
                                                    }
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var project in _projects)
                                                {
                                                    <tr class="align-middle
                                                                @(( @GetProjectMenHours(project.Id) > project.EstimatedHours ? "table-warning" : ""))
                                                                @(( project.DeadLine < DateTime.Now ? "table-danger" : ""))
                                                                @(( project.EstimatedCompleted >= 100 || !project.Active ? "table-secondary" : ""))"
                                                        @onclick="@(async () => await OnSelectProject(project.Id))">
                                                    
                                                        <td class="align-middle
                                                            @((_selectedProject == null || 
                                                                    !_selectedProject.Id.Equals(project.Id)
                                                                                    ? "" : "highlight_1"))"
                                                            style="word-wrap: break-word; max-width: 150px;">
                                                            <labe>@project.Name</labe>
                                                        </td>
                                                    
                                                        <td class="align-middle
                                                            @((_selectedProject == null ||
                                                                    !_selectedProject.Id.Equals(project.Id)
                                                                                    ? "" : "highlight_1"))">
                                                            <label>@(project.DeclaredCompleted.ToString("##0.0")) %</label>
                                                        </td>
                                                    
                                                        <td class="align-middle
                                                            @((_selectedProject == null ||
                                                                    !_selectedProject.Id.Equals(project.Id)
                                                                                    ? "" : "highlight_1"))">
                                                            <label>@(project.EstimatedCompleted.ToString("##0.0")) %</label>
                                                        </td>
                                                    
                                                        <td class="align-middle
                                                            @((_selectedProject == null ||
                                                                    !_selectedProject.Id.Equals(project.Id)
                                                                                    ? "" : "highlight_1"))">
                                                            <label>@project.DeadLine?.ToString("dd/MM/yyyy")</label>
                                                        </td>

                                                        @if (isWorkingMode)
                                                        {
                                                            <td class="align-middle
                                                                @((_selectedProject == null ||
                                                                    !_selectedProject.Id.Equals(project.Id)
                                                                                    ? "" : "highlight_1"))">
                                                                <span class="majesticons--chat-2-text"
                                                                @onclick="@OnAddIssueClick">
                                                                </span>
                                                            </td>
                                                        }

                                                        @if (isWorkingMode && AssignPm)
                                                        {
                                                            <td class="align-middle">
                                                                @if (project.Type?.CanAssignePM ?? false)
                                                                {
                                                                    @if (!string.IsNullOrEmpty(project.PmName))
                                                                    {
                                                                        <button type="button" class="btn btn-outline-info"
                                                                                @onclick="@(async (x) => await OnProjectAssignClick(project))">
                                                                            @project.PmName
                                                                        </button>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span class="clarity--assign-user-line"
                                                                              @onclick="@(async (x) => await OnProjectAssignClick(project))">
                                                                        </span>
                                                                    }
                                                                }
                                                            </td>
                                                        }

                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="col row">
                            <!-- Table Disciplines -->
                            <div class="col-12">
                                @if (_selectedProject != null && !_isEndWorkDialogOdepened)
                                {
                                    <div class="text-center row me-2">
                                        <h3 class="@((_selectedProject != null ? "col-9" : "col-11"))">Disciplines</h3>
                                        @if (isWorkingMode && editDiscipline)
                                        {
                                            @if (_selectedDiscipline != null)
                                            {
                                                <span class="fluent--delete-28-regular col-1"
                                                      @onclick="@(() => DeleteDiscipline())" />
                                                <span class="material-symbols--edit-outline col-1"
                                                      @onclick="@(() => EditDiscipline())" />
                                            }
                                            @if (_hasDisciplinesSelections)
                                            {
                                                <span class="grommet-icons--add col-1"
                                                      @onclick="@(() => AddDiscipline())" />
                                            }
                                        }
                                    </div>
                                    <div class="table-responsive p-1 table-container">
                                        <table class="table table-hover table-danger text-center">
                                            <thead>
                                                <tr>
                                                    <th scope="col" class="sticky-header">Discipline</th>
                                                    <th scope="col" class="sticky-header">Estimated Discipline Hours</th>
                                                    @if (isWorkingMode && AssignEngineer)
                                                    {
                                                        <th scope="col"></th>
                                                    }
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var discipline in _disciplines)
                                                {
                                                    <tr class="align-middle
                                                                @(( @GetDisciplineMenHours(discipline.Id) > discipline.EstimatedHours ? "table-danger" : ""))"
                                                        @onclick="@(async () => await OnSelectDiscipline(discipline.Id))">
                                                    
                                                        <td class="align-middle
                                                            @(((_selectedDiscipline == null
                                                                || !_selectedDiscipline.Id.Equals(discipline.Id))
                                                                    ? "" : "highlight_2"))">
                                                            <labe>@discipline.Type.Name</labe>
                                                        </td>
                                                    
                                                        <td class="align-middle text-center
                                                            @(((_selectedDiscipline == null
                                                                || !_selectedDiscipline.Id.Equals(discipline.Id))
                                                                    ? "" : "highlight_2"))">
                                                            <label>@(discipline.EstimatedCompleted.ToString("##0.0")) %</label>
                                                        </td>

                                                        @if (isWorkingMode && AssignEngineer)
                                                        {
                                                            <td class="align-middle">
                                                                <span class="clarity--assign-user-line"
                                                                        @onclick="@(async (x) => await OnDesciplineAssignClick(discipline))">
                                                                </span>
                                                            </td>
                                                        }

                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="col row">
                            
                            <!-- Table Deliverables -->
                            <div class="col-12">
                                @if (_selectedDiscipline != null && !_isEndWorkDialogOdepened)
                                {
                                    <div class="text-center row me-2">
                                        <h3 class="@((_selectedProject != null ? "col-9" : "col-11"))">Deliverables</h3>
                                        @if (isWorkingMode && editDeliverable)
                                        {
                                            @if (_selectedDraw != null)
                                            {
                                                <span class="fluent--delete-28-regular col-1"
                                                      @onclick="@(() => DeleteDeliverable())" />
                                                @if (_hasDrawingsSelections)
                                                {
                                                    <span class="material-symbols--edit-outline col-1"
                                                          @onclick="@(() => EditDeliverable())" />
                                                }
                                            }
                                            @if (_hasDrawingsSelections)
                                            {
                                                <span class="grommet-icons--add col-1"
                                                      @onclick="@(() => AddDeliverable())" />
                                            }
                                        }
                                    </div>
                                    <div class="table-responsive p-1 table-container">
                                        <table class="table table-hover table-primary text-center">
                                            <thead>
                                                <tr>
                                                    <th scope="col" class="sticky-header">Drawing</th>
                                                    <th scope="col" class="sticky-header">Total Hours</th>
                                                    <th scope="col" class="sticky-header">Declared Completion</th>
                                                    @if (isWorkingMode && AssignDesigner)
                                                    {
                                                        <th scope="col"></th>
                                                    }
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var draw in _draws)
                                                {
                                                    <tr class="align-middle"
                                                        @onclick="@(() => OnSelectDraw(draw))">

                                                        <td class="align-middle
                                                            @(((_selectedDraw == null ||
                                                                    !_selectedDraw.Id.Equals(draw.Id))
                                                                        ? "" : "highlight_3"))">
                                                            <div class="align-middle h-100"><labe>@draw.Type.Name</labe></div>
                                                        </td>

                                                        <td class="align-middle
                                                            @(((_selectedDraw == null ||
                                                                    !_selectedDraw.Id.Equals(draw.Id))
                                                                        ? "" : "highlight_3"))">
                                                            <label>@GetDrawingMenHours(draw.Id) h</label>
                                                        </td>

                                                        <td class="align-middle
                                                            @(((_selectedDraw == null ||
                                                                !_selectedDraw.Id.Equals(draw.Id))
                                                                    ? "" : "highlight_3"))">
                                                            <label>@draw.CompletionEstimation %</label>
                                                        </td>

                                                        @if (isWorkingMode && AssignDesigner)
                                                        {
                                                            <td class="align-middle">
                                                                <span class="clarity--assign-user-line"
                                                                        @onclick="@(async (x) => await OnDrawingAssignClick(draw))">
                                                                </span>
                                                            </td>
                                                        }

                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                            </div>

                            <!-- Table Others -->
                            <div class="col-12">
                                @if (_selectedDiscipline != null && !_isEndWorkDialogOdepened)
                                {
                                    <div class="text-center row me-2">
                                        <h3 class="@((_selectedProject != null ? "col-9" : "col-11"))">Supportive Works</h3>
                                        @if (isWorkingMode && editOther)
                                        {
                                            @if (_selectedOther != null)
                                            {
                                                <span class="fluent--delete-28-regular col-1"
                                                      @onclick="@(() => DeleteOther())" />
                                                @if (_hasOthersSelections)
                                                {
                                                    <span class="material-symbols--edit-outline col-1"
                                                          @onclick="@(() => EditOther())" />
                                                }
                                            }
                                            @if (_hasOthersSelections)
                                            {
                                                <span class="grommet-icons--add col-1"
                                                      @onclick="@(() => AddOther())" />
                                            }
                                        }
                                    </div>

                                    <div class="table-responsive p-1 table-container">
                                        <table class="table table-hover table-warning text-center">
                                            <thead>
                                                <tr>
                                                    <th scope="col" class="sticky-header">Other</th>
                                                    <th scope="col" class="sticky-header">Total Hours</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var _other in _others)
                                                {
                                                    <tr class="align-middle" @onclick="@(() => OnSelectDoc(_other))">

                                                        <td class="align-middle
                                                        @(((_selectedOther == null ||
                                                                !_selectedOther.Id.Equals(_other.Id))
                                                                    ? "" : "highlight_4"))"
                                                            style="min-width: 110px;">
                                                            <div class="align-middle h-100"><labe>@_other.Type.Name</labe></div>
                                                        </td>

                                                        <td class="align-middle
                                                        @(((_selectedOther == null ||
                                                                !_selectedOther.Id.Equals(_other.Id))
                                                                    ? "" : "highlight_4"))"
                                                            style="min-width: 90px;max-width: 90px; margin: 0 auto;">
                                                            <label>@GetOtherMenHours(_other.Id) h</label>
                                                        </td>

                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                            </div>

                        </div>

                    </div>

                </div>
            </div>
        </div>
    </div>
}

<FluentDivider />

<!-- KPIS -->
@if (seeKpis)
{
    <div class="mt-3">
        <KpisLand />
    </div>
}


<!-- Dialogs -->
@if (!_startLoading)
{
    <!-- On "Press Work End" Button Dialog -->
    <FluentDialog @ref="_endWorkDialog"
                  Hidden="@(!_isEndWorkDialogOdepened || _startLoading)"
                  Modal="false"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                        --dialog-height: auto !important;">

        <!-- Headder -->
        <div class="d-flex justify-content-between">
            <h3>Work update</h3>
            <h3>My Time Since Start: <b class="text-warning">@remainingTime.ToString(@"hh\:mm")</b></h3>
        </div>
        

        <div class="modal-body">

            <div class="mt-2 row gx-3">

                <!-- Select Project -->
                <div class="col">
                    <div class="text-center">
                        <h5>Select Project</h5>
                    </div>
                    <select class="form-select form-select-lg"
                            aria-label="Select Project"
                            @onchange="@(async (ChangeEventArgs e) => await OnSelectProject(Convert.ToInt32(e.Value)))">
                        <option value="0" selected>Select Project</option>
                        @foreach (var project in _projects.Where(p => p.Active).ToList())
                        {
                            <option value="@project.Id">
                                @project.Name
                            </option>
                        }
                    </select>
                </div>

                <!-- Discipline -->
                <div class="col">
                    <div class="text-center">
                        <h5>Select Discipline</h5>
                    </div>
                    <select class="form-select form-select-lg"
                            aria-label="Select Discipline"
                            @onchange="@(async (ChangeEventArgs e) => await OnSelectDiscipline(Convert.ToInt32(e.Value)))">
                        <option value="0" selected>Select Discipline</option>
                        @foreach (var discipline in _disciplines)
                        {
                            <option value="@discipline.Id">
                                @discipline.Type.Name
                            </option>
                        }
                    </select>
                </div>

            </div>

            <div class="mt-1 row gx-3">

                <!-- Drawings -->
                <div class="col">
                    <div class="text-center">
                        <h5>Deliverables</h5>
                    </div>
                    <div class="table-responsive"
                         style="height: 300px;">
                        <table class="table table-hover table-borderless">
                            <thead class="table-primary">
                                <tr>
                                    <th scope="col" class="sticky-header">Drawing</th>
                                    <th scope="col" class="sticky-header">Time</th>
                                    <th scope="col" class="sticky-header">Declared Completion</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var _draw in _draws)
                                {
                                    <tr class="align-middle">
                                        <td class="align-middle">
                                            <div class="align-middle h-100"><labe>@_draw.Type.Name</labe></div>
                                        </td>
                                        <td class="align-middle">
                                            <TimeInput MinHours="0"
                                                       MaxHours="@remainingTime.Hours"
                                                       MinMinutes="0"
                                                       MaxMinutes="60"
                                                       Time="_draw.Time"
                                                       OnPropertyChanged=@((time) => _onDrawTimeChanged(_draw, time)) />
                                        </td>
                                        <td class="align-middle">
                                            <div class="input-group" style="width: 110px;">
                                                <input type="number"
                                                       class="form-control"
                                                       EnableMinMax="true"
                                                       min="0"
                                                       max="100"
                                                       style="min-width: 52px !important; max-width: 52px !important;"
                                                       onkeyup="if(value<0) value=0; if(value>100) value=100;"
                                                       onmousewheel="(e) => {if(e.deltaY > 1) {value++;} else if (e.deltaY < -1) {value--;}}"
                                                       @onchange=@((e) => _onDrawCompletedChanged(_draw, e.Value))>
                                                <div class="input-group-append">
                                                    <span class="input-group-text">%</span>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Others -->
                <div class="col">
                    <div class="text-center">
                        <h5>Supportive Works</h5>
                    </div>
                    <div class="table-responsive"
                         style="height: 300px;">
                        <table class="table table-hover table-borderless">
                            <thead class="table-primary">
                                <tr>
                                    <th scope="col" class="sticky-header">Other</th>
                                    <th scope="col" class="sticky-header">Time</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var _other in _others)
                                {
                                    <tr class="align-middle">
                                        <td class="align-middle">
                                            <div class="align-middle h-100"><labe>@_other.Type.Name</labe></div>
                                        </td>
                                        <td class="align-middle">
                                            <TimeInput MinHours="0"
                                                       MaxHours="@remainingTime.Hours"
                                                       MinMinutes="0"
                                                       MaxMinutes="60"
                                                       Time="@_other.Time"
                                                       OnPropertyChanged=@((time) => _onOtherTimeChanged(_other, time)) />
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>

            <!-- Set User Extra Time -->
            <div class="mt-1">
                <SetUserTime LogedUserTimes="@_editLogedUserTimes"
                             RemainingTime="@remainingTime"
                             OnPersonalTimeChanged="@_onPersonalTimeChanged"
                             OnTrainingTimeChanged="@_onTrainingTimeChanged"
                             OnCorporateTimeChanged="@_onCorporateTimeChanged" />
            </div>

        </div>


        <div class="row">
            <FluentButton Disabled="@_isEndWorkAcceptDialogDisabled"
                          class="col-6"
                          OnClick="@(async () => await _endWorkDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => _endWorkDialogCansel())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On "Add Designers" Button Dialog -->
    <FluentDialog @ref="_addDesignerDialog"
                  Hidden="@(!_isAddDesignerDialogOdepened || _startLoading)"
                  Modal="false"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: 400px !important;
                         --dialog-height: auto !important;">

        <div class="badge text-dark text-wrap fs-3">
            Add Designers
        </div>

        <div class="modal-body row">
            <div class="m-1 row justify-content-center">

                <div class="col-12 p-2">

                    <div class="mt-1 p-2 modal-content">
                        <div class="d-flex justify-content-around">
                            <div class="table-responsive p-1 w-100 h-100"
                                 style="max-height: 300px !important; overflow-y: auto;">
                                 <table class="bg-transparent">
                                    <tbody>
                                        @foreach (var designer in _designers)
                                        {
                                            <tr clss="align-middle d-flex">
                                                <td class="align-middle">
                                                    <input class="form-check-input big-checkbox mt-2"
                                                           type="checkbox"
                                                           id="isSelectedDesigner"
                                                           @bind=@designer.IsSelected>
                                                </td>
                                                <td class="align-middle">
                                                    <div class="ms-3 mt-2">
                                                        @designer.LastName &nbsp; @designer.FirstName
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addDesignerDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => _addDesignerDialogCansel())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On "Add Engineers" Button Dialog -->
    <FluentDialog @ref="_addEngineerDialog"
                  Hidden="@(!_isAddEngineerDialogOdepened || _startLoading)"
                  Modal="false"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: 400px !important;
                         --dialog-height: auto !important;">

        <div class="badge text-dark text-wrap fs-3">
            Add Engineers
        </div>

        <div class="modal-body row">
            <div class="m-1 row justify-content-center">

                <div class="col-12 p-2">

                    <div class="mt-1 p-2 modal-content">
                        <div class="d-flex justify-content-around">
                            <div class="table-responsive p-1 w-100 h-100"
                                 style="max-height: 300px !important; overflow-y: auto;">
                                <table class="bg-transparent">
                                    <tbody>
                                        @foreach (var engineer in _engineers)
                                        {
                                            <tr clss="align-middle d-flex">
                                                <td class="align-middle">
                                                    <input class="form-check-input big-checkbox mt-2"
                                                           type="checkbox"
                                                           id="isSelectedDesigner"
                                                           @bind=@engineer.IsSelected>
                                                </td>
                                                <td class="align-middle">
                                                    <div class="ms-3 mt-2">
                                                        @engineer.LastName &nbsp; @engineer.FirstName
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addEngineerDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => _addEngineerDialogCansel())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On "Add Project Managers" Button Dialog -->
    <FluentDialog @ref="_addPMDialog"
                  Hidden="@(!_isAddPMDialogOdepened || _startLoading)"
                  Modal="false"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: 400px !important;
                         --dialog-height: auto !important;">

        <div class="badge text-dark text-wrap fs-3">
            Add Project Managers
        </div>

        <div class="modal-body row">
            <div class="m-1 row justify-content-center">
                <div class="col-12 p-2">
                    <select class="form-select form-select-lg" @bind="_selectedPmId">
                        @foreach (var pm in _projectManagers)
                        {
                            <option value="@pm.Id"
                                    selected="@pm.Id.Equals(_selectedPmId)"
                                    @onchange="@(e => ToggleSelection(pm, e.Value.ToString()))">
                                <span>@pm.LastName &nbsp; @pm.FirstName</span>
                            </option>
                        }
                    </select>

                </div>
            </div>
        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addPMDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => _addPMDialogCansel())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Add Issues Dialog -->
    <FluentDialog @ref="_addIssueDialog"
                  Hidden="@(!_isAddIssueDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: 700px !important;">

        <div class="modal-body row mb-1">
            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="CloseAddIssueClick"></span>
            </div>
            <div class="col-12 justify-content-center">
                <IssueDetailed @ref="@issueCompoment" Project="@_selectedProject"/>
            </div>
        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addIssueDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => _addIssueDialogCansel())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Display Issues Dialog -->
    <FluentDialog @ref="_displayIssuesDialog"
                  Hidden="@(!_isDisplayIssuesDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                         --dialog-width: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="@(async() => await CloseIssuesClick())"></span>
            </div>

            <div class="col-12 justify-content-center">
                <Issues Source="@_issues" OnSave="@(async() => await CloseIssuesClick())" />
            </div>

        </div>

    </FluentDialog>

    <!-- On Add/Edit Project Dialog -->
    <FluentDialog @ref="_addEditProjectDialog"
                  Hidden="@(!_isAddEditProjectDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                         --dialog-width: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="CloseAddProjectClick"></span>
            </div>

            <div class="col-12 justify-content-center">
                <ProjectDetailed @ref="@projectCompoment" />
            </div>

        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addEditProjectDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => CloseAddProjectClick())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Add/Edit Discipline Dialog -->
    <FluentDialog @ref="_addEditDisciplineDialog"
                  Hidden="@(!_isAddEditDisciplineDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                         --dialog-width: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="CloseAddDisciplineClick"></span>
            </div>

            <div class="col-12 justify-content-center">
                @if (_selectedProject != null)
                {
                    <DisciplineDetailed @ref="@disciplineCompoment" ProjectId="@_selectedProject.Id" />
                }
                else
                {
                    <h3 class="warning">No Project Selected!</h3>
                }
            </div>

        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addEditDisciplineDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => CloseAddDisciplineClick())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Add/Edit Deliverable Dialog -->
    <FluentDialog @ref="_addEditDeliverableDialog"
                  Hidden="@(!_isAddEditDeliverableDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                         --dialog-width: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="CloseAddDeliverableClick"></span>
            </div>

            <div class="col-12 justify-content-center">
                @if(_selectedDiscipline != null)
                {
                    <DrawingDetailed @ref="@drawingCompoment" DisciplineId="@_selectedDiscipline.Id" />
                } 
                else
                {
                    <h3 class="warning">No Discipline Selected!</h3>
                }
            </div>

        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addEditDeliverableDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => CloseAddDeliverableClick())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Add/Edit Other Dialog -->
    <FluentDialog @ref="_addEditOtherDialog"
                  Hidden="@(!_isAddEditOtherDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                         --dialog-width: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="CloseAddOtherClick"></span>
            </div>

            <div class="col-12 justify-content-center">
                @if (_selectedDiscipline != null)
                {
                    <OtherDetailed @ref="@otherCompoment" DisciplineId="@_selectedDiscipline.Id" />
                }
                else
                {
                    <h3 class="warning">No Discipline Selected!</h3>
                }
            </div>

        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addEditOtherDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => CloseAddOtherClick())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Delete Dialog -->
    <FluentDialog @ref="_deleteDialog"
                  Hidden="@(!_isDeleteDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                         --dialog-width: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header row">
                <div class="col-10">
                    <h3>Delete Record</h3>
                </div>
                <span class="col-2 carbon--close-outline float-end" @onclick="OnDeleteClose"></span>
            </div>

            <div class="col-12 justify-content-center">
                <p>@_deleteDialogMsg</p>
            </div>

        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await OnDeleteAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => OnDeleteClose())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>

    <!-- On Add/Edit Invoice Dialog -->
    <FluentDialog @ref="_addEditInvoiceDialog"
                  Hidden="@(!_isAddEditInvoiceDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: 70vw !important;
                         --dialog-width: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="CloseAddInvoiceClick"></span>
            </div>

            <div class="col-12 justify-content-center">
                @if (_selectedProject != null)
                {
                    <Invoices @ref="@_invoicesCompoment" Project="@_selectedProject" />
                }
                else
                {
                    <h3 class="warning">No Project Selected!</h3>
                }
            </div>

        </div>


    </FluentDialog>

    <!-- On Add/Edit Payment Dialog -->
    <FluentDialog @ref="_addEditPaymentDialog"
                  Hidden="@(!_isAddEditPaymentDialogOdepened || _startLoading)"
                  Modal="true"
                  DialogType=@DialogType.Panel
                  style="--dialog-width: auto !important;
                         --dialog-width: auto !important;">

        <div class="modal-body row mb-1">

            <div class="col-12 dialog-header">
                <span class="carbon--close-outline float-end" @onclick="CloseAddPaymentClick"></span>
            </div>

            <div class="col-12 justify-content-center">
                @if (_selectedProject != null)
                {
                    <Payments @ref="@_ppaymentsCompoment" Project="@_selectedProject" />
                }
                else
                {
                    <h3 class="warning">No Project Selected!</h3>
                }
            </div>

        </div>

        <div class="row">
            <FluentButton class="col-6"
                          OnClick="@(async () => await _addPaymentDialogAccept())">
                Ok
            </FluentButton>
            <FluentButton class="col-6" OnClick="@(() => CloseAddPaymentClick())">
                Cancel
            </FluentButton>
        </div>

    </FluentDialog>
}
