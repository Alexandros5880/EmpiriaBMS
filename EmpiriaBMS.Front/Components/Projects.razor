@page "/"
@page "/projects"
@using Microsoft.Extensions.Configuration
@using Microsoft.AspNetCore.Hosting
@using Microsoft.Extensions.Hosting
@using Microsoft.Fast.Components.FluentUI
@using EmpiriaBMS.Front.ViewModel.Components
@using AutoMapper
@using EmpiriaBMS.Core
@using System.Collections.ObjectModel;
@using System.Reflection;
@using EmpiriaMS.Models.Enums
@using System.ComponentModel
@inject TeamsFx teamsfx
@inject TeamsUserCredential teamsUserCredential
@inject MicrosoftTeams MicrosoftTeams
@inject IWebHostEnvironment HostEnvironment
@inject IConfiguration Configuration
@inject NavigationManager MyNavigationManager
@inject IDataProvider DataProvider
@inject IMapper Mapper

<div>
    @if (isLoading)
    {
        <div style="display: flex; justify-content: center; align-items: center;">
            <FluentProgressRing />
        </div>
    }
    else
    {
        <h3 class="ms-4 mt-4">Projects</h3>
    
        @* <AddUser /> *@
    
        if (error != null)
        {
            <p>@error</p>
        }
        else
        {
            <div class="card mt-2 p-4 shadow p-3 mb-5 bg-white rounded" style="border-radius: 4px;">

                <table class="table container" style="overflow-x:hidden; max-width: 1000px;">
                    <thead>
                        <tr>
                            <th scope="col">
                                <input type="checkbox"
                                       class="big-checkbox"
                                       @bind="IsAllChecked"
                                       @onclick="SelectionChanged" />
                            </th>
                            <th scope="col">Name</th>
                            <th scope="col">PlanType</th>
                            <th scope="col">Drawing</th>
                            <th scope="col">Completed</th>
                            <th scope="col">ManHours</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var project in _data)
                        {
                            <tr>
                                <th scope="row">
                                    <div class="col">
                                        <input type="checkbox"
                                               class="mt-2 big-checkbox"
                                               @bind="project.IsChecked" />
                                    </div>
                                </th>
                                <td>
                                    <input type="text" class="form-control" @bind="project.Name">
                                </td>
                                <td>
                                    <select class="form-select"
                                            style="width:150px;"
                                            @bind="project.PlanType">
                                        @foreach (var opt in projectPlanTypes)
                                        {
                                            <option value="@opt">@opt</option>
                                        }
                                    </select>
                                </td>
                                <td>
                                    <input type="text"
                                           class="form-control"
                                           style="width:200px;"
                                           @bind="project.Drawing">
                                </td>
                                <td>
                                    <div class="input-group mb-3" style="width:150px;">
                                        <input type="number" class="form-control" @bind="project.Completed">
                                        <div class="input-group-append">
                                            <span class="input-group-text" id="basic-addon2">%</span>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="input-group mb-3" style="width:150px;">
                                        <input type="number" class="form-control" @bind="project.ManHours">
                                        <div class="input-group-append">
                                            <span class="input-group-text" id="basic-addon2">h</span>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <nav>
                    <ul class="pagination">
                        <li class="@((_pageIndex == 0 ? "page-item disabled" : "page-item"))">
                            <a class="page-link"
                               href="#"
                               tabindex="-1"
                               @onclick="async () => {--_pageIndex; await GetData();}">Previous</a>
                        </li>
                        @for(int i = 0; i < _pagesCounter; i++)
                        {
                            <li class="page-item">
                                <a class="@((_pageIndex == i ? "page-item active" : "page-item"))"
                                   href="#"
                                   @onclick="async () => {_pageIndex = i; await GetData();}">@i</a>
                            </li>
                        }
                        <li class="@((_pageIndex == _pagesCounter ? "page-item disabled" : "page-item"))">
                            <a class="page-link"
                               href="#"
                               @onclick="async () => {++_pageIndex; await GetData();}">Next</a>
                        </li>
                    </ul>
                </nav>

            </div>
        }
    
    }
</div>


@code {
    string error = null;
    bool isLoading = true;
    bool runInTeams = false;
    bool IsAllChecked = false;

    private ObservableCollection<ProjectVM> _data = new ObservableCollection<ProjectVM>();
    List<PlanType> projectPlanTypes = Enum.GetValues(typeof(PlanType)).OfType<PlanType>().ToList();
    private int _pageSize = 5;
    private int _pageIndex = 1;
    private int _recordsCount = 0;
    private int _pagesCounter = 0;


    protected override async void OnInitialized()
    {
        await GetData();

        base.OnInitialized();

        // Update UI
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            runInTeams = await MicrosoftTeams.IsInTeams();
            if (runInTeams)
            {

            }

            // Update UI
            //StateHasChanged();
        }

    }

    private void SelectionChanged()
    {
        foreach (var p in _data)
            p.IsChecked = !IsAllChecked;
    }

    private async Task GetData()
    {
        isLoading = true;
        try
        {
            _recordsCount = await DataProvider.Projects.Count();
            _pagesCounter = _recordsCount / _pageSize; ;
            var data = (await DataProvider.Projects.GetAll(_pageSize, _pageIndex))
                        .Select(p => Mapper.Map<ProjectVM>(p))
                        .ToList();
            _data.Clear();
            data.ForEach(_data.Add);
        }
        catch (Exception ex)
        {
            error = $"Get Projects Exception: {ex.Message}";
        }
        isLoading = false;
    }

}
