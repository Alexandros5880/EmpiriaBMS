@using EmpiriaBMS.Front.ViewModel.Interfaces
@using EmpiriaBMS.Front.Services
@using Color = Microsoft.Fast.Components.FluentUI.Color
@using EmpiriaBMS.Front.Components.Admin.Projects.Clients
@using EmpiriaBMS.Core.Hellpers
@using EmpiriaBMS.Core.Services

@inject IDataProvider _dataProvider
@inject IMapper _mapper
@inject IDialogService DialogService
@inject MicrosoftTeams MicrosoftTeams
@inject Logging.LoggerManager Logger
@inject Culture Culture

<div class="card rounded">

    @if (Content != null)
    {
        <div class="row m-2 d-flex justify-content-center"
             style="cursor: pointer; overflow: auto; margin: 0 auto;">

            @if (!string.IsNullOrEmpty(@Title))
            {
                <div class="col-12 mb-2 mt-2">
                    <h3>@Title</h3>
                </div>
            }

            <div class="col-12 row gx-2 mt-1">
                <!-- Project -->
                <div class="col-xl-6 col-lg-6 col-md-12">
                    <div>
                        Project<span class="text-danger">*</span>
                    </div>
                    <div>
                        <FluentCombobox @ref="_projectCombo"
                                        Autocomplete="ComboboxAutocomplete.Both"
                                        Placeholder="Select Project..."
                                        Items="@_projects"
                                        Height="200px"
                                        Width="100%"
                                        TOption="ProjectVM"
                                        OptionText="@(c => c.Name)"
                                        OptionValue="@(c => c.Id.ToString())"
                                        @bind-SelectedOption="@SelectedProject"
                                        Disabled="@(!IsWorkingMode)" />
                    </div>
                    @if (!validProject)
                    {
                        <div>
                            <span class="text-warning">Field is required!</span>
                        </div>
                    }
                </div>
                <!-- Expenses Type-->
                @if (Content.Category == Models.Enum.InvoiceCategory.EXPENSES)
                {
                    <div class="col-xl-6 col-lg-6 col-md-12">
                        <div>
                            Expense Type
                        </div>
                        <div>
                            <FluentCombobox @ref="_expenseTypeCombo"
                                            Autocomplete="ComboboxAutocomplete.Both"
                                            Placeholder="Select Expense Type..."
                                            Items="@_expensesTypes"
                                            Height="200px"
                                            Width="100%"
                                            TOption="ExpensesTypeVM"
                                            OptionText="@(c => c.Name)"
                                            OptionValue="@(c => c.Id.ToString())"
                                            @bind-SelectedOption="@SelectedExpType"
                                            Disabled="@(!IsWorkingMode)" />
                        </div>
                    </div>
                }
            </div>

            <div class="col-12 row gx-2 mt-1">
                <!-- Invoice Number -->
                <div class="col-xl-6 col-lg-6 col-md-12">
                    <div>
                        Invoice Number
                    </div>
                    <FluentNumberField Style="width:100%;"
                                       @bind-Value="@Content.InvoiceNumber"
                                       Min="0"
                                       Disabled="@(!IsWorkingMode)" />
                </div>
                <!-- Mark -->
                <div class="col-xl-6 col-lg-6 col-md-12">
                    <div>
                        Mark
                    </div>
                    <FluentTextField Style="width:100%;"
                                     @bind-Value="@Content.Mark"
                                     Disabled="@(!IsWorkingMode)" />
                    @if (!validMark)
                    {
                        <div class="col-12">
                            <span class="text-warning">Field is required!</span>
                        </div>
                    }
                </div>
            </div>

            <div class="col-12 row gx-2 mt-1">
                <!-- Fee -->
                <div class="col-xl-6 col-lg-6 col-md-12">
                    <div>
                        Fee<span class="text-danger">*</span>
                    </div>
                    <div>
                        <FluentNumberField Style="width:100%;"
                                           @bind-Value="@Content.Fee"
                                           Min="0"
                                           Disabled="@(!IsWorkingMode)" />
                    </div>
                </div>
                <!-- Vat -->
                <div class="col-xl-6 col-lg-6 col-md-12">
                    <div>
                        Vat<span class="text-danger">*</span>
                    </div>
                    <div>
                        <FluentNumberField Style="width:100%;"
                                           @bind-Value="@Content.Vat"
                                           Min="0"
                                           Disabled="@(!IsWorkingMode)"/>
                    </div>
                </div>
            </div>

            <div class="col-12 row gx-2 mt-1">
                <!-- Estimated Payment -->
                <div class="col-xl-6 col-lg-6 col-md-12">
                    <div>
                        Estimated Payment
                    </div>
                    <FluentDatePicker Style="width:100%;"
                                      @bind-Value="@Content.EstimatedPayment"
                                      Disabled="@(!IsWorkingMode)" />
                </div>
                <!-- Actual Payment -->
                <div class="col-xl-6 col-lg-6 col-md-12">
                    <div>
                        Actual Payment
                    </div>
                    <FluentDatePicker Style="width:100%;"
                                      @bind-Value="@Content.ActualPayment"
                                      Disabled="@(!IsWorkingMode)" />
                </div>
            </div>

            <div class="col-12 row gx-2 mt-1">
                <!-- Actual Paid -->
                <div class="col-xl-6 col-lg-6 col-md-12">
                    <div>
                        Actual Paid
                    </div>
                    <div>
                        <PayedPaymentCell Item="@Content" />
                    </div>
                </div>
                <!-- Category -->
                <div class="col-xl-6 col-lg-6 col-md-12">
                    <div>
                        Pending
                    </div>
                    <div>
                        <PendingPaymentCell Item="Content" />
                    </div>
                </div>
            </div>

            <div class="col-12 row gx-2 mt-1">
                <!-- Total -->
                <div class="col-xl-6 col-lg-6 col-md-12">
                    <div>
                        Total
                    </div>
                    <div>
                        @Culture.GetNumberFromated((double)((Content.Vat / 100) * Content.Fee) + Content.Fee)
                    </div>
                </div>
            </div>

            @if (DisplayAcions)
            {
                <div class="col-12 mb-2 mt-1 d-flex justify-content-end">
                    <FluentButton Disabled="@(!IsWorkingMode)"
                                  Appearance="Appearance.Outline"
                                  OnClick="@(async () => await Save())">Save</FluentButton>
                </div>
            }

        </div>
    }

</div>