@page "/invoices"

@using EmpiriaBMS.Front.Services
@using System.Globalization

@inject IDataProvider DataProvider
@inject IMapper Mapper
@inject IDialogService DialogService
@inject MicrosoftTeams MicrosoftTeams
@inject Logging.LoggerManager Logger

<div class="card shadow">

    <div class="m-2"
         style="cursor: pointer;">
        
        <div class="d-flex justify-content-between w-90 mt-2">
            <div class="ms-2">
                <!-- Ttitle -->
                <h3>Invoices</h3>
            </div>
            <div>
                <!-- Pending Payments -->
                <PendingPayments Items="@FilteredItems" />
            </div>
            <div>
                <!-- Payed Payments -->
                <PayedPayments Items="@FilteredItems" />
            </div>
            <div class="d-flex justify-content-end">
                <!-- Add -->
                <FluentButton Disabled="@(!IsWorkingMode)" aria-label="Add"
                              IconEnd="@(new Icons.Regular.Size16.Add())"
                              OnClick="@(() => _add())">Add</FluentButton>
                <!-- Export -->
                <FluentButton class="ms-1"
                              IconStart="@(new Icons.Regular.Size16.ArrowExport())"
                              Appearance="Appearance.Outline"
                              OnClick="@(async (e) => await _exportToCSV())"
                              Disabled="@((FilteredItems?.Count() ?? 0) == 0)">
                    Export
                </FluentButton>
            </div>
        </div>

        <div>
            <FluentDataGrid Items="@FilteredItems"
                            ResizableColumns=true
                            Pagination="@pagination"
                            TGridItem="InvoiceVM"
                            OnRowFocus="@(async (i) => await HandleRowFocus(i))"
                            GridTemplateColumns="1fr 2fr 2fr 2fr 2fr 2fr 2fr 2fr 2fr 100px"
                            style="height: 100%; overflow:auto;">

                <!-- CheckBox -->
                <TemplateColumn Title="" Sortable="false">
                    <ChildContent>
                        <div>
                            @if (IsRowSelect(context.Id))
                            {
                                <FluentIcon Icon="Icons.Regular.Size32.Checkmark" />
                            }
                        </div>
                    </ChildContent>
                </TemplateColumn>
                
                <!-- Project Name -->
                <TemplateColumn Title="Project"
                                Sortable="true"
                                InitialSortDirection=SortDirection.Descending
                                IsDefaultSortColumn=true>
                    <ColumnOptions>
                        <div class="search-box">
                            <FluentSearch type="search"
                                            Autofocus=true
                                            @bind-Value="@_filterString"
                                            Placeholder="Project..."
                                            @oninput="@HandleFilter" />
                        </div>
                    </ColumnOptions>
                    <ChildContent>
                        @(context.ProjectName)
                    </ChildContent>
                </TemplateColumn>

                <!-- Type Name -->
                <PropertyColumn Property="@(p => p.TypeName)" Sortable="true" Title="Type" Align="@Align.Start" />

                <!-- Estimate Date -->
                <PropertyColumn Property="@(p => p.EstimatedDate)" Format="dd-mm-yyyy" Sortable="true" Title="EstimatedDate" Align="@Align.Start" />

                <!-- Payment Date -->
                <PropertyColumn Property="@(p => p.PaymentDate)" Format="dd-mm-yyyy" Sortable="true" Title="PaymentDate" Align="@Align.Start" />
                
                <!-- Pending Paiments -->
                <TemplateColumn Title="Pending" Sortable="true">
                    <ChildContent>
                        <PendingPaymentCell Item="context" />
                    </ChildContent>
                </TemplateColumn>

                <!-- Payed Paiments -->
                <TemplateColumn Title="Payed" Sortable="true">
                    <ChildContent>
                        <PayedPaymentCell Item="context" />
                    </ChildContent>
                </TemplateColumn>

                <!-- Mark -->
                <PropertyColumn Property="@(p => p.Mark)" Sortable="true" Title="Mark" Align="@Align.Start" />

                <!-- Number -->
                <PropertyColumn Property="@(p => p.Number)" Sortable="true" Title="Number" Align="@Align.Start" />

                <!-- Actions -->
                <TemplateColumn Title="Actions" Align="@Align.End">
                    @* <FluentButton Disabled="@(!IsWorkingMode)" aria-label="Edit" IconEnd="@(new Icons.Regular.Size16.Edit())" OnClick="@(() => _edit(context))" /> *@
                    <FluentButton Disabled="@(!IsWorkingMode)" aria-label="Delete" IconEnd="@(new Icons.Regular.Size16.Delete())" OnClick="@(() => _delete(context))" />
                </TemplateColumn>

            </FluentDataGrid>
        </div>
        <div style="min-width: 50%;">
            <FluentPaginator State="@pagination">
                <SummaryTemplate>
                    There are <strong>@(pagination.TotalItemCount ?? 0)</strong> rows
                </SummaryTemplate>
                <PaginationTextTemplate>
                    This is page <strong>@(pagination.CurrentPageIndex + 1)</strong> out of a total of <strong>@(pagination.LastPageIndex + 1)</strong> pages
                </PaginationTextTemplate>
            </FluentPaginator>
        </div>

    </div>
</div>