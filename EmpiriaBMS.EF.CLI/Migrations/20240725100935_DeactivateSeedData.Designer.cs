// <auto-generated />
using System;
using EmpiriaBMS.EF.CLI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmpiriaBMS.EF.CLI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240725100935_DeactivateSeedData")]
    partial class DeactivateSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormattedAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("PlaceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("ContractualFee")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PMSignature")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.DailyTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CorporateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DailyUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int?>("DrawingId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEditByAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LeadId")
                        .HasColumnType("int");

                    b.Property<int?>("OfferId")
                        .HasColumnType("int");

                    b.Property<int?>("OtherId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonalUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TimeSpanId")
                        .HasColumnType("int");

                    b.Property<int?>("TrainingUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CorporateUserId");

                    b.HasIndex("DailyUserId");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("DrawingId");

                    b.HasIndex("LeadId");

                    b.HasIndex("OfferId");

                    b.HasIndex("OtherId");

                    b.HasIndex("PersonalUserId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TimeSpanId");

                    b.HasIndex("TrainingUserId");

                    b.ToTable("DailyTime");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.DailyTimeRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CorporateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DailyUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int?>("DrawingId")
                        .HasColumnType("int");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEditByAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LeadId")
                        .HasColumnType("int");

                    b.Property<int?>("OfferId")
                        .HasColumnType("int");

                    b.Property<int?>("OtherId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonalUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TimeSpanId")
                        .HasColumnType("int");

                    b.Property<int?>("TrainingUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CorporateUserId");

                    b.HasIndex("DailyUserId");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("DrawingId");

                    b.HasIndex("LeadId");

                    b.HasIndex("OfferId");

                    b.HasIndex("OtherId");

                    b.HasIndex("PersonalUserId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TimeSpanId");

                    b.HasIndex("TrainingUserId");

                    b.ToTable("DailyTimeRequests");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Deliverable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("CompletionEstimation")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("TypeId");

                    b.ToTable("Deliverables");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.DeliverableEmployee", b =>
                {
                    b.Property<int>("DeliverableId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DeliverableId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("DeliverablesEmployees");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.DeliverableType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeliverableTypes");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("DeclaredCompleted")
                        .HasColumnType("real");

                    b.Property<float>("EstimatedCompleted")
                        .HasColumnType("real");

                    b.Property<long>("EstimatedHours")
                        .HasColumnType("bigint");

                    b.Property<long>("EstimatedMandays")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.DisciplineEngineer", b =>
                {
                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<int>("EngineerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DisciplineId", "EngineerId");

                    b.HasIndex("EngineerId");

                    b.ToTable("DisciplinesEngineers");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.DisciplineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DisciplineTypes");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("IssueId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IssueId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ContractId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstimatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Fee")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<double?>("Total")
                        .HasColumnType("float");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("Vat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContractId")
                        .IsUnique()
                        .HasFilter("[ContractId] IS NOT NULL");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TypeId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.InvoiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InvoicesTypes");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("ComplaintDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayedRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Evaluation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsClose")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PMSignature")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Solution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SolutionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Verification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerificationDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("VerificatorSignature")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DisplayedRoleId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Lead", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedDurationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PotencialFee")
                        .HasColumnType("float");

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("ClientId");

                    b.ToTable("Leads");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LeadId")
                        .HasColumnType("int");

                    b.Property<string>("Observations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("OfferPrice")
                        .HasColumnType("float");

                    b.Property<int?>("ProjectCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectSubCategoryId")
                        .HasColumnType("int");

                    b.Property<double?>("PudgetPrice")
                        .HasColumnType("float");

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("TeamText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LeadId");

                    b.HasIndex("ProjectCategoryId");

                    b.HasIndex("ProjectId")
                        .IsUnique()
                        .HasFilter("[ProjectId] IS NOT NULL");

                    b.HasIndex("ProjectSubCategoryId");

                    b.HasIndex("StateId");

                    b.HasIndex("SubCategoryId");

                    b.HasIndex("TypeId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.OfferState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OffesStates");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.OfferType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OffersTypes");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Fee")
                        .HasColumnType("float");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("TypeId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PaymentsTypes");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ord")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeadLine")
                        .HasColumnType("datetime2");

                    b.Property<float>("DeclaredCompleted")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("EstimatedCompleted")
                        .HasColumnType("real");

                    b.Property<long>("EstimatedHours")
                        .HasColumnType("bigint");

                    b.Property<long>("EstimatedMandays")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OfferId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectManagerId")
                        .HasColumnType("int");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProjectManagerId");

                    b.HasIndex("StageId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.ProjectCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CanAssignePM")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectsCategories");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.ProjectStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectsStages");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.ProjectSubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("CanAssignePM")
                        .HasColumnType("bit");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProjectCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProjectCategoryId");

                    b.ToTable("ProjectsSubCategories");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.ProjectSubConstructor", b =>
                {
                    b.Property<int>("SubContractorId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubContractorId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectsSubConstructors");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmployee")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentRoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolesPermissions");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.SupportiveWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("CompletionEstimation")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("TypeId");

                    b.ToTable("SupportiveWorks");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.SupportiveWorkEmployee", b =>
                {
                    b.Property<int>("SupportiveWorkId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SupportiveWorkId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("SupportiveWorkEmployees");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.SupportiveWorkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SupportiveWorkTypes");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.TeamsRequestedUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProxyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TeamsRequestedUser");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Timespan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Days")
                        .HasColumnType("bigint");

                    b.Property<long>("Hours")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Minutes")
                        .HasColumnType("bigint");

                    b.Property<long>("Seconds")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TimeSpans");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MidName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProxyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamsObjectId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsersRoles");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Client", b =>
                {
                    b.HasBaseType("EmpiriaBMS.Models.Models.User");

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("AddressId");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.DailyTime", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.User", "CorporateUser")
                        .WithMany("CorporateEventTime")
                        .HasForeignKey("CorporateUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmpiriaBMS.Models.Models.User", "DailyUser")
                        .WithMany("DailyTime")
                        .HasForeignKey("DailyUserId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EmpiriaBMS.Models.Models.Discipline", "Discipline")
                        .WithMany("DailyTime")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EmpiriaBMS.Models.Models.Deliverable", "Drawing")
                        .WithMany("DailyTime")
                        .HasForeignKey("DrawingId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EmpiriaBMS.Models.Models.Lead", "Lead")
                        .WithMany("DailyTime")
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EmpiriaBMS.Models.Models.Offer", "Offer")
                        .WithMany("DailyTime")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EmpiriaBMS.Models.Models.SupportiveWork", "Other")
                        .WithMany("DailyTime")
                        .HasForeignKey("OtherId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EmpiriaBMS.Models.Models.User", "PersonalUser")
                        .WithMany("PersonalTime")
                        .HasForeignKey("PersonalUserId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EmpiriaBMS.Models.Models.Project", "Project")
                        .WithMany("DailyTime")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("EmpiriaBMS.Models.Models.Timespan", "TimeSpan")
                        .WithMany()
                        .HasForeignKey("TimeSpanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.User", "TrainingUser")
                        .WithMany("TrainingTime")
                        .HasForeignKey("TrainingUserId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("CorporateUser");

                    b.Navigation("DailyUser");

                    b.Navigation("Discipline");

                    b.Navigation("Drawing");

                    b.Navigation("Lead");

                    b.Navigation("Offer");

                    b.Navigation("Other");

                    b.Navigation("PersonalUser");

                    b.Navigation("Project");

                    b.Navigation("TimeSpan");

                    b.Navigation("TrainingUser");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.DailyTimeRequest", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.User", "CorporateUser")
                        .WithMany()
                        .HasForeignKey("CorporateUserId");

                    b.HasOne("EmpiriaBMS.Models.Models.User", "DailyUser")
                        .WithMany()
                        .HasForeignKey("DailyUserId");

                    b.HasOne("EmpiriaBMS.Models.Models.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId");

                    b.HasOne("EmpiriaBMS.Models.Models.Deliverable", "Drawing")
                        .WithMany()
                        .HasForeignKey("DrawingId");

                    b.HasOne("EmpiriaBMS.Models.Models.Lead", "Lead")
                        .WithMany()
                        .HasForeignKey("LeadId");

                    b.HasOne("EmpiriaBMS.Models.Models.Offer", "Offer")
                        .WithMany()
                        .HasForeignKey("OfferId");

                    b.HasOne("EmpiriaBMS.Models.Models.SupportiveWork", "Other")
                        .WithMany()
                        .HasForeignKey("OtherId");

                    b.HasOne("EmpiriaBMS.Models.Models.User", "PersonalUser")
                        .WithMany()
                        .HasForeignKey("PersonalUserId");

                    b.HasOne("EmpiriaBMS.Models.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("EmpiriaBMS.Models.Models.Timespan", "TimeSpan")
                        .WithMany()
                        .HasForeignKey("TimeSpanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.User", "TrainingUser")
                        .WithMany()
                        .HasForeignKey("TrainingUserId");

                    b.Navigation("CorporateUser");

                    b.Navigation("DailyUser");

                    b.Navigation("Discipline");

                    b.Navigation("Drawing");

                    b.Navigation("Lead");

                    b.Navigation("Offer");

                    b.Navigation("Other");

                    b.Navigation("PersonalUser");

                    b.Navigation("Project");

                    b.Navigation("TimeSpan");

                    b.Navigation("TrainingUser");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Deliverable", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Discipline", "Discipline")
                        .WithMany("Deliverables")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.DeliverableType", "Type")
                        .WithMany("Deliverables")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.DeliverableEmployee", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Deliverable", "Deliverable")
                        .WithMany("DeliverablesEmployees")
                        .HasForeignKey("DeliverableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.User", "Employee")
                        .WithMany("DeliverablesEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deliverable");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Discipline", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Project", "Project")
                        .WithMany("Disciplines")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.DisciplineType", "Type")
                        .WithMany("Disciplines")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.User", null)
                        .WithMany("Disciplines")
                        .HasForeignKey("UserId");

                    b.Navigation("Project");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.DisciplineEngineer", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Discipline", "Discipline")
                        .WithMany("DisciplinesEngineers")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.User", "Engineer")
                        .WithMany("DisciplinesEngineers")
                        .HasForeignKey("EngineerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Engineer");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Document", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Issue", "Issue")
                        .WithMany("Documents")
                        .HasForeignKey("IssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Issue");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Email", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.User", "User")
                        .WithMany("Emails")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Invoice", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Contract", "Contract")
                        .WithOne("Invoice")
                        .HasForeignKey("EmpiriaBMS.Models.Models.Invoice", "ContractId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmpiriaBMS.Models.Models.Project", "Project")
                        .WithMany("Invoices")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.InvoiceType", "Type")
                        .WithMany("Invoices")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");

                    b.Navigation("Project");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Issue", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.User", "Creator")
                        .WithMany("MyIssues")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.Role", "DisplayedRole")
                        .WithMany("Issues")
                        .HasForeignKey("DisplayedRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.Project", "Project")
                        .WithMany("Complains")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("DisplayedRole");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Lead", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Address", "Address")
                        .WithMany("Leds")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EmpiriaBMS.Models.Models.Client", "Client")
                        .WithMany("Leds")
                        .HasForeignKey("ClientId");

                    b.Navigation("Address");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Offer", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.ProjectCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EmpiriaBMS.Models.Models.Lead", "Lead")
                        .WithMany("Offers")
                        .HasForeignKey("LeadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmpiriaBMS.Models.Models.ProjectCategory", null)
                        .WithMany("Offers")
                        .HasForeignKey("ProjectCategoryId");

                    b.HasOne("EmpiriaBMS.Models.Models.Project", "Project")
                        .WithOne("Offer")
                        .HasForeignKey("EmpiriaBMS.Models.Models.Offer", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmpiriaBMS.Models.Models.ProjectSubCategory", null)
                        .WithMany("Offers")
                        .HasForeignKey("ProjectSubCategoryId");

                    b.HasOne("EmpiriaBMS.Models.Models.OfferState", "State")
                        .WithMany("Offers")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.ProjectSubCategory", "SubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EmpiriaBMS.Models.Models.OfferType", "Type")
                        .WithMany("Offers")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Lead");

                    b.Navigation("Project");

                    b.Navigation("State");

                    b.Navigation("SubCategory");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Payment", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Invoice", "Invoice")
                        .WithMany("Payments")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.PaymentType", "Type")
                        .WithMany("Payments")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Project", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Client", null)
                        .WithMany("Projects")
                        .HasForeignKey("ClientId");

                    b.HasOne("EmpiriaBMS.Models.Models.User", "ProjectManager")
                        .WithMany("PMProjects")
                        .HasForeignKey("ProjectManagerId");

                    b.HasOne("EmpiriaBMS.Models.Models.ProjectStage", "Stage")
                        .WithMany("Projects")
                        .HasForeignKey("StageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectManager");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.ProjectSubCategory", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.ProjectCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("EmpiriaBMS.Models.Models.ProjectCategory", null)
                        .WithMany("SubCategories")
                        .HasForeignKey("ProjectCategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.ProjectSubConstructor", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Project", "Project")
                        .WithMany("ProjectsSubConstructors")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.User", "SubContractor")
                        .WithMany("ProjectsSubConstructors")
                        .HasForeignKey("SubContractorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("SubContractor");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Role", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Role", "ParentRole")
                        .WithMany("ChildRoles")
                        .HasForeignKey("ParentRoleId");

                    b.Navigation("ParentRole");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.RolePermission", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Permission", "Permission")
                        .WithMany("RolesPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.Role", "Role")
                        .WithMany("RolesPermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.SupportiveWork", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Discipline", "Discipline")
                        .WithMany("Others")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.SupportiveWorkType", "Type")
                        .WithMany("SupportiveWorks")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.SupportiveWorkEmployee", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.User", "Employee")
                        .WithMany("SupportiveWorksEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.SupportiveWork", "SupportiveWork")
                        .WithMany("SupportiveWorksEmployees")
                        .HasForeignKey("SupportiveWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SupportiveWork");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.UserRole", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpiriaBMS.Models.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Client", b =>
                {
                    b.HasOne("EmpiriaBMS.Models.Models.Address", "Address")
                        .WithMany("Clients")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Address");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Address", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Leds");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Contract", b =>
                {
                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Deliverable", b =>
                {
                    b.Navigation("DailyTime");

                    b.Navigation("DeliverablesEmployees");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.DeliverableType", b =>
                {
                    b.Navigation("Deliverables");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Discipline", b =>
                {
                    b.Navigation("DailyTime");

                    b.Navigation("Deliverables");

                    b.Navigation("DisciplinesEngineers");

                    b.Navigation("Others");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.DisciplineType", b =>
                {
                    b.Navigation("Disciplines");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Invoice", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.InvoiceType", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Issue", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Lead", b =>
                {
                    b.Navigation("DailyTime");

                    b.Navigation("Offers");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Offer", b =>
                {
                    b.Navigation("DailyTime");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.OfferState", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.OfferType", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.PaymentType", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Permission", b =>
                {
                    b.Navigation("RolesPermissions");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Project", b =>
                {
                    b.Navigation("Complains");

                    b.Navigation("DailyTime");

                    b.Navigation("Disciplines");

                    b.Navigation("Invoices");

                    b.Navigation("Offer");

                    b.Navigation("ProjectsSubConstructors");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.ProjectCategory", b =>
                {
                    b.Navigation("Offers");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.ProjectStage", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.ProjectSubCategory", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Role", b =>
                {
                    b.Navigation("ChildRoles");

                    b.Navigation("Issues");

                    b.Navigation("RolesPermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.SupportiveWork", b =>
                {
                    b.Navigation("DailyTime");

                    b.Navigation("SupportiveWorksEmployees");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.SupportiveWorkType", b =>
                {
                    b.Navigation("SupportiveWorks");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.User", b =>
                {
                    b.Navigation("CorporateEventTime");

                    b.Navigation("DailyTime");

                    b.Navigation("DeliverablesEmployees");

                    b.Navigation("Disciplines");

                    b.Navigation("DisciplinesEngineers");

                    b.Navigation("Emails");

                    b.Navigation("MyIssues");

                    b.Navigation("PMProjects");

                    b.Navigation("PersonalTime");

                    b.Navigation("ProjectsSubConstructors");

                    b.Navigation("SupportiveWorksEmployees");

                    b.Navigation("TrainingTime");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("EmpiriaBMS.Models.Models.Client", b =>
                {
                    b.Navigation("Leds");

                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
